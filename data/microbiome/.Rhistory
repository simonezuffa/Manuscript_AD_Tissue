dplyr::filter(map_lgl(Taxon, ~ any(str_detect(.x, ancom_3xtg_filter$taxon))))
ogu_interest <- taxonomy %>%
dplyr::filter(purr::map_lgl(Taxon, ~ any(str_detect(.x, ancom_3xtg_filter$taxon))))
ogu_interest <- taxonomy %>%
dplyr::filter(purrr::map_lgl(Taxon, ~ any(str_detect(.x, ancom_3xtg_filter$taxon))))
prova <- paste(ancom_3xtg_filter$taxon, sep = "|")
prova
ogu_interest <- taxonomy %>%
dplyr::filter(str_detect(pattern = prova, Taxon))
ogu_interest <- taxonomy %>%
dplyr::filter(str_detect(pattern = "Akkermansia muciniphila_D_776786"|"Bifidobacterium globosum", Taxon))
ogu_interest <- taxonomy %>%
dplyr::filter(str_detect(Taxon, paste(c("Akkermansia muciniphila_D_776786", "Bifidobacterium globosum"), collapse = "|")))
ogu_interest
prova <- paste(ancom_3xtg_filter$taxon, sep = "|")
prova
prova <- paste(ancom_3xtg_filter$taxon, collapse = "|")
prova
ogu_interest <- taxonomy %>%
dplyr::filter(str_detect(Taxon, prova))
ogu_interest
View(ogu_interest)
ogu_interest <- taxonomy %>%
dplyr::filter(str_detect(Taxon, paste(ancom_3xtg_filter$taxon, collapse = "|")))
ogu_interest <- taxonomy %>%
dplyr::filter(str_detect(Taxon, paste(ancom_3xtg_filter$taxon, collapse = "|"))) %>%
dplyr::select(1,2)
View(ogu_interest)
# joint-RPCA serum
joint_serum <- read_tsv("jointRPCA/serum.tsv")
View(joint_serum)
joint_serum_filter <- joint_serum %>% dplyr::filter(featureid %in% ogu_interest$`Feature ID`)
View(joint_serum_filter)
serum_metab <- read_csv("jointRPCA/3xtg_serum_features_info_mn.csv")
View(serum_metab)
View(serum_metab)
serum_metab <- read_csv("jointRPCA/3xtg_serum_features_info_mn.csv") %>%
dplyr::filter(str_detect(pattern = "carnitne", `NPC#class`) | str_detect(pattern = regex("carnitne|Hippurate", ignore_case = TRUE), Compound_Name))
View(serum_metab)
serum_metab <- read_csv("jointRPCA/3xtg_serum_features_info_mn.csv") %>%
dplyr::filter((str_detect(pattern = "carnitne", `NPC#class`)) | (str_detect(pattern = regex("carnitne|Hippurate", ignore_case = TRUE), Compound_Name)))
View(serum_metab)
serum_metab <- read_csv("jointRPCA/3xtg_serum_features_info_mn.csv") %>%
dplyr::filter(
str_detect(`NPC#class`, "carnitne") |
str_detect(Compound_Name, regex("carnitne|Hippurate", ignore_case = TRUE))
)
serum_metab <- read_csv("jointRPCA/3xtg_serum_features_info_mn.csv")
serum_metab_interest <- serum_metab %>%
dplyr::filter(str_detect(`NPC#class`, patter = "carnitne") | str_detect(Compound_Name, pattern = regex("carnitne|Hippurate", ignore_case = TRUE)))
View(serum_metab_interest)
serum_metab_interest <- serum_metab %>%
dplyr::filter(str_detect(`NPC#class`, patter = "carnitine") | str_detect(Compound_Name, pattern = regex("carnitine|Hippurate", ignore_case = TRUE)))
View(serum_metab_interest)
serum_metab_interest <- serum_metab %>%
dplyr::filter(str_detect(`NPC#class`, patter = "carnitine") |
str_detect(Compound_Name, pattern = regex("carnitine|Hippurate", ignore_case = TRUE))) %>%
dplyr::filter(!(Feature_ID %in% c("1335", "2127")))
View(serum_metab_interest)
serum_metab_interest <- serum_metab %>%
dplyr::filter(str_detect(`NPC#class`, patter = "carnitine") |
str_detect(Compound_Name, pattern = regex("carnitine|Hippurate", ignore_case = TRUE))) %>%
dplyr::filter(!(Feature_ID %in% c("1335", "2127", "2516")))
serum_metab_interest <- serum_metab %>%
dplyr::filter(str_detect(`NPC#class`, patter = "carnitine") |
str_detect(Compound_Name, pattern = regex("carnitine|Hippurate", ignore_case = TRUE))) %>%
dplyr::filter(!(Feature_ID %in% c("1335", "2127", "2516", "1218")))
serum_metab_interest <- serum_metab %>%
dplyr::filter(str_detect(`NPC#class`, patter = "carnitine") |
str_detect(Compound_Name, pattern = regex("carnitine|Hippurate", ignore_case = TRUE))) %>%
dplyr::filter(!(Feature_ID %in% c("1335", "2127", "2516", "1218", "8443")))
serum_metab_interest <- serum_metab %>%
dplyr::filter(str_detect(`NPC#class`, patter = "carnitine") |
str_detect(Compound_Name, pattern = regex("carnitine|Hippurate", ignore_case = TRUE))) %>%
dplyr::filter(!(Feature_ID %in% c("1335", "2127", "2516", "1218", "8443"))) %>%
dplyr::mutate(Feature = paste("serum", Feature_ID, sep = "_"))
joint_serum_filter <- joint_serum %>%
dplyr::filter(featureid %in% ogu_interest$`Feature ID`) %>%
dplyr::select(serum_metab_interest$Feature)
joint_serum_filter <- joint_serum %>%
dplyr::filter(featureid %in% ogu_interest$`Feature ID`) %>%
column_to_rownames("featureid") %>%
dplyr::select(serum_metab_interest$Feature)
# Export for cytoscaoe
cor_edges <- joint_serum_filter %>%
as.data.frame() %>%
rownames_to_column(var = "Microbe") %>%
pivot_longer(cols = -Microbe, names_to = "Metabolite", values_to = "Correlation") %>%
filter(!is.na(Correlation))
View(cor_edges)
# Save to CSV
write_csv(cor_edges, "correlation_network.csv")
View(serum_metab_interest)
# Export for cytoscaoe
cor_edges <- joint_serum_filter %>%
as.data.frame() %>%
rownames_to_column(var = "Microbe") %>%
pivot_longer(cols = -Microbe, names_to = "Metabolite", values_to = "Correlation") %>%
filter(!is.na(Correlation)) %>%
dplyr::filter(Metabolite %in% c("serum_3078", "serum_2482", "serum_4173", "serum_2821"))
View(cor_edges)
# Save to CSV
write_csv(cor_edges, "correlation_network.csv")
ogu_interest <- taxonomy %>%
dplyr::filter(str_detect(Taxon, paste(ancom_3xtg_filter$taxon, collapse = "|"))) %>%
dplyr::select(1,2)
View(ogu_interest)
joint_serum_filter <- joint_serum %>%
dplyr::filter(featureid %in% ogu_interest$`Feature ID`) %>%
column_to_rownames("featureid") %>%
dplyr::select(serum_metab_interest$Feature)
View(joint_serum_filter)
# Export for cytoscaoe
cor_edges <- joint_serum_filter %>%
as.data.frame() %>%
rownames_to_column(var = "Microbe") %>%
pivot_longer(cols = -Microbe, names_to = "Metabolite", values_to = "Correlation") %>%
filter(!is.na(Correlation)) %>%
dplyr::filter(Metabolite %in% c("serum_3078", "serum_2482", "serum_4173", "serum_2821"))
View(cor_edges)
# Export for cytoscaoe
cor_edges <- joint_serum_filter %>%
as.data.frame() %>%
rownames_to_column(var = "Microbe") %>%
pivot_longer(cols = -Microbe, names_to = "Metabolite", values_to = "Correlation") %>%
filter(!is.na(Correlation)) %>%
dplyr::filter(Metabolite %in% c("serum_3078", "serum_2482", "serum_4173", "serum_2821")) %>%
left_join(ogu_interest, by = c("Microbe" = "Feature ID"))
# Export for cytoscaoe
cor_edges <- joint_serum_filter %>%
as.data.frame() %>%
rownames_to_column(var = "Microbe") %>%
pivot_longer(cols = -Microbe, names_to = "Metabolite", values_to = "Correlation") %>%
filter(!is.na(Correlation)) %>%
dplyr::filter(Metabolite %in% c("serum_3078", "serum_2482", "serum_4173", "serum_2821")) %>%
left_join(ogu_interest, by = c("Microbe" = "Feature ID")) %>%
group_by(Taxon, Metabolite) %>%
summarise(Mean_Correlation = mean(Correlation, na.rm = TRUE), .groups = "drop")
# Save to CSV
write_csv(cor_edges, "correlation_network.csv")
cor_edges <- joint_serum_filter %>%
as.data.frame() %>%
rownames_to_column(var = "Microbe") %>%
pivot_longer(cols = -Microbe, names_to = "Metabolite", values_to = "Correlation") %>%
filter(!is.na(Correlation)) %>%
dplyr::filter(Metabolite %in% c("serum_3078", "serum_2482", "serum_4173", "serum_2821")) %>%
left_join(ogu_interest, by = c("Microbe" = "Feature ID")) %>%
group_by(Taxon, Metabolite) %>%
summarise(Mean_Correlation = mean(Correlation, na.rm = TRUE), .groups = "drop")
# Export for cytoscaoe
cor_edges <- joint_serum_filter %>%
as.data.frame() %>%
rownames_to_column(var = "Microbe") %>%
pivot_longer(cols = -Microbe, names_to = "Metabolite", values_to = "Correlation") %>%
filter(!is.na(Correlation)) %>%
dplyr::filter(Metabolite %in% c("serum_3078", "serum_2482", "serum_4173", "serum_2821")) %>%
left_join(ogu_interest, by = c("Microbe" = "Feature ID")) %>%
group_by(Taxon, Metabolite) %>%
summarise(Mean_Correlation = mean(Correlation, na.rm = TRUE), .groups = "drop") %>%
dplyr::mutate(Taxon = gsub(".*;s__", "", Taxon))
cor_edges <- joint_serum_filter %>%
as.data.frame() %>%
rownames_to_column(var = "Microbe") %>%
pivot_longer(cols = -Microbe, names_to = "Metabolite", values_to = "Correlation") %>%
filter(!is.na(Correlation)) %>%
dplyr::filter(Metabolite %in% c("serum_3078", "serum_2482", "serum_4173", "serum_2821")) %>%
left_join(ogu_interest, by = c("Microbe" = "Feature ID")) %>%
group_by(Taxon, Metabolite) %>%
summarise(Mean_Correlation = mean(Correlation, na.rm = TRUE), .groups = "drop")
# Export for cytoscaoe
cor_edges <- joint_serum_filter %>%
as.data.frame() %>%
rownames_to_column(var = "Microbe") %>%
pivot_longer(cols = -Microbe, names_to = "Metabolite", values_to = "Correlation") %>%
filter(!is.na(Correlation)) %>%
dplyr::filter(Metabolite %in% c("serum_3078", "serum_2482", "serum_4173", "serum_2821")) %>%
left_join(ogu_interest, by = c("Microbe" = "Feature ID")) %>%
group_by(Taxon, Metabolite) %>%
summarise(Mean_Correlation = mean(Correlation, na.rm = TRUE), .groups = "drop") %>%
dplyr::mutate(Taxon = gsub(".*; s__", "", Taxon))
library(igraph)
library(ggraph)
# Create an igraph object
network_graph <- graph_from_data_frame(edges, directed = FALSE)
# Create an igraph object
network_graph <- graph_from_data_frame(cor_edges, directed = FALSE)
# Plot using ggraph
ggraph(network_graph, layout = "fr") +  # "fr" is Fruchterman-Reingold layout
geom_edge_link(aes(edge_alpha = abs(Mean_Correlation), edge_width = abs(Mean_Correlation)), color = "gray") +
geom_node_point(size = 5, color = "steelblue") +
geom_node_text(aes(label = name), repel = TRUE, size = 4) +
theme_minimal() +
ggtitle("Microbe-Metabolite Network")
?ggraph
# Plot using ggraph
ggraph(network_graph, layout = "dendrogram") +  # "fr" is Fruchterman-Reingold layout
geom_edge_link(aes(edge_alpha = abs(Mean_Correlation), edge_width = abs(Mean_Correlation)), color = "gray") +
geom_node_point(size = 5, color = "steelblue") +
geom_node_text(aes(label = name), repel = TRUE, size = 4) +
theme_minimal() +
ggtitle("Microbe-Metabolite Network")
# Plot using ggraph
ggraph(network_graph, layout = "auto") +  # "fr" is Fruchterman-Reingold layout
geom_edge_link(aes(edge_alpha = abs(Mean_Correlation), edge_width = abs(Mean_Correlation)), color = "gray") +
geom_node_point(size = 5, color = "steelblue") +
geom_node_text(aes(label = name), repel = TRUE, size = 4) +
theme_minimal() +
ggtitle("Microbe-Metabolite Network")
# Plot using ggraph
ggraph(network_graph, layout = "hive") +  # "fr" is Fruchterman-Reingold layout
geom_edge_link(aes(edge_alpha = abs(Mean_Correlation), edge_width = abs(Mean_Correlation)), color = "gray") +
geom_node_point(size = 5, color = "steelblue") +
geom_node_text(aes(label = name), repel = TRUE, size = 4) +
theme_minimal() +
ggtitle("Microbe-Metabolite Network")
# Plot using ggraph
ggraph(network_graph, layout = "fabric") +  # "fr" is Fruchterman-Reingold layout
geom_edge_link(aes(edge_alpha = abs(Mean_Correlation), edge_width = abs(Mean_Correlation)), color = "gray") +
geom_node_point(size = 5, color = "steelblue") +
geom_node_text(aes(label = name), repel = TRUE, size = 4) +
theme_minimal() +
ggtitle("Microbe-Metabolite Network")
# Plot using ggraph
ggraph(network_graph, layout = "stress") +  # "fr" is Fruchterman-Reingold layout
geom_edge_link(aes(edge_alpha = abs(Mean_Correlation), edge_width = abs(Mean_Correlation)), color = "gray") +
geom_node_point(size = 5, color = "steelblue") +
geom_node_text(aes(label = name), repel = TRUE, size = 4) +
theme_minimal() +
ggtitle("Microbe-Metabolite Network")
# Save to CSV
write_csv(cor_edges, "correlation_network.csv")
View(serum_metab_interest)
setwd("~/OneDrive - University of California, San Diego Health/Projects/Caltech/Data/microbiome")
library(tidyverse)
library(ggpubr)
metadata_3xtg <- read_csv("table_plot/3xtg/meta_3xtg_spf.csv")
metadata_5xfad <- read_csv("table_plot/5xfad/meta_5xfad_spf.csv")
##############
# phylo-RPCA #
##############
phylorpca_3xtg <- read.delim("table_plot/3xtg/phyloRPCA_ordination_reformat.txt") %>%
left_join(metadata_3xtg, by = c("X" = "sample_name"))
i <- "study_type"
phylorpca_3xtg_plot <- phylorpca_3xtg %>%
ggscatter(x = "Axis1_62.5", y = "Axis2_34.4", color = i, alpha = 0.6,
title = "phylo-RPCA 3xTg Study", palette = c("#B7E6A5", "#007188"),
xlab = "PC1 (62.5%)", ylab = "PC2 (34.4%)",
ggtheme = theme_classic(), legend = "None") +
geom_point(data = phylorpca_3xtg %>% group_by((!!sym(i))) %>%
summarise_at(vars(matches("Axis")), mean), aes(Axis1_62.5, Axis2_34.4, color = (!!sym(i))), size = 4, shape = 8) +
theme(plot.title = element_text(size = 10), axis.title = element_text(size = 6),
axis.text = element_text(size = 8))
#ggsave(plot = phylorpca_3xtg_plot, filename = "phyloRPCA_3xtg.svg", device = "svg", dpi = "retina", height = 2, width = 2)
phylorpca_3xtg_sac <- read.delim("table_plot/3xtg/sac-phyloRPCA_ordination_reformat.txt") %>%
left_join(metadata_3xtg, by = c("X" = "sample_name"))
i <- "genotype"
phylorpca_3xtg_sac_plot <- phylorpca_3xtg_sac %>%
ggscatter(x = "Axis1_63.9", y = "Axis2_30.7", color = i, alpha = 0.6,
title = "phylo-RPCA 3xTg Sacrifice", palette = c("#5F4B8BFF", "#E69A8DFF"),
xlab = "PC1 (63.9%)", ylab = "PC2 (30.7%)",
ggtheme = theme_classic(), legend = "None") +
geom_point(data = phylorpca_3xtg_sac %>% group_by((!!sym(i))) %>%
summarise_at(vars(matches("Axis")), mean), aes(Axis1_63.9, Axis2_30.7, color = (!!sym(i))), size = 4, shape = 8) +
theme(plot.title = element_text(size = 10), axis.title = element_text(size = 6),
axis.text = element_text(size = 8))
#ggsave(plot = phylorpca_3xtg_sac_plot, filename = "phyloRPCA_3xtg_sacrifice.svg", device = "svg", dpi = "retina", height = 2, width = 2)
i <- "sex"
phylorpca_3xtg_sac_sex_plot <- phylorpca_3xtg_sac %>%
ggscatter(x = "Axis1_63.9", y = "Axis2_30.7", color = i, alpha = 0.6,
title = "phylo-RPCA 3xTg Sacrifice",
xlab = "PC1 (63.9%)", ylab = "PC2 (30.7%)",
ggtheme = theme_classic(), legend = "None") +
geom_point(data = phylorpca_3xtg_sac %>% group_by((!!sym(i))) %>%
summarise_at(vars(matches("Axis")), mean), aes(Axis1_63.9, Axis2_30.7, color = (!!sym(i))), size = 4, shape = 8) +
theme(plot.title = element_text(size = 10), axis.title = element_text(size = 6),
axis.text = element_text(size = 8))
#ggsave(plot = phylorpca_3xtg_sac_sex_plot, filename = "phyloRPCA_3xtg_sex_sacrifice.svg", device = "svg", dpi = "retina", height = 2, width = 2)
phylorpca_5xfad <- read.delim("table_plot/5xfad/phyloRPCA_ordination_reformat.txt") %>%
left_join(metadata_5xfad)
i <- "intervention"
phylorpca_5xfad_plot <- phylorpca_5xfad %>%
ggscatter(x = "Axis1_0.790", y = "Axis2_0.193", color = i, alpha = 0.6,
title = "phylo-RPCA 5xFAD Study", palette = c("#B7E6A5", "#007188"),
xlab = "PC1 (79.0%)", ylab = "PC2 (19.3%)",
ggtheme = theme_classic(), legend = "None") +
geom_point(data = phylorpca_5xfad %>% group_by((!!sym(i))) %>%
summarise_at(vars(matches("Axis")), mean), aes(Axis1_0.790, Axis2_0.193, color = (!!sym(i))), size = 4, shape = 8) +
theme(plot.title = element_text(size = 10), axis.title = element_text(size = 6),
axis.text = element_text(size = 8))
#ggsave(plot = phylorpca_5xfad_plot, filename = "phyloRPCA_5xfad.svg", device = "svg", dpi = "retina", height = 2, width = 2)
phylorpca_5xfad_sac <- read.delim("table_plot/5xfad/sac_phyloRPCA_ordination_reformat.txt") %>%
left_join(metadata_5xfad, by = c("X" = "sample_name"))
i <- "mouse_strain"
phylorpca_5xfad_sac_plot <- phylorpca_5xfad_sac %>%
ggscatter(x = "Axis1_66.8", y = "Axis2_31.8", color = i, alpha = 0.6,
title = "phylo-RPCA 5xFAD - Sacrifice", palette = c("#5F4B8BFF", "#E69A8DFF"),
xlab = "PC1 (66.8%)", ylab = "PC2 (31.8%)",
ggtheme = theme_classic(), legend = "None") +
geom_point(data = phylorpca_5xfad_sac %>% group_by((!!sym(i))) %>%
summarise_at(vars(matches("Axis")), mean), aes(Axis1_66.8, Axis2_31.8, color = (!!sym(i))), size = 4, shape = 8) +
theme(plot.title = element_text(size = 10), axis.title = element_text(size = 6),
axis.text = element_text(size = 8))
#ggsave(plot = phylorpca_5xfad_sac_plot, filename = "phyloRPCA_5xfad_sacrifice.svg", device = "svg", dpi = "retina", height = 2, width = 2)
i <- "sex"
phylorpca_5xfad_sac_sex_plot <- phylorpca_5xfad_sac %>%
ggscatter(x = "Axis1_66.8", y = "Axis2_31.8", color = i, alpha = 0.6,
title = "phylo-RPCA 5xFAD - Sacrifice",
xlab = "PC1 (66.8%)", ylab = "PC2 (31.8%)",
ggtheme = theme_classic(), legend = "None") +
geom_point(data = phylorpca_5xfad_sac %>% group_by((!!sym(i))) %>%
summarise_at(vars(matches("Axis")), mean), aes(Axis1_66.8, Axis2_31.8, color = (!!sym(i))), size = 4, shape = 8) +
theme(plot.title = element_text(size = 10), axis.title = element_text(size = 6),
axis.text = element_text(size = 8))
#ggsave(plot = phylorpca_5xfad_sac_sex_plot, filename = "phyloRPCA_5xfad_sexsacrifice.svg", device = "svg", dpi = "retina", height = 2, width = 2)
###########
# Shannon #
###########
shannon_3xtg <- read_tsv("table_plot/3xtg/shannon_alpha-diversity.tsv")
colnames(shannon_3xtg)[1] <- "sample_name"
shannon_3xtg_plot <- shannon_3xtg %>%
left_join(metadata_3xtg) %>%
dplyr::filter(study_type == "Sacrifice") %>%
dplyr::mutate(genotype = factor(genotype, levels = c("B6", "3XTG"))) %>%
ggboxplot(x = "genotype", y = "shannon_entropy", add = "jitter",
add.params = list(color = "genotype"),
title = "Alpha Diversity - 3xTg Sacrifice",
palette = c("#5F4B8BFF", "#E69A8DFF"), legend = "none",
ylab = "Shannon Entropy", xlab = FALSE) + ylim(1, 6) +
theme(plot.title = element_text(size = 10), axis.title = element_text(size = 6),
axis.text = element_text(size = 8))
shannon_5xfad <- read_tsv("table_plot/5xfad/shannon_alpha-diversity.tsv")
colnames(shannon_5xfad)[1] <- "sample_name"
shannon_5xfad_plot <- shannon_5xfad %>%
left_join(metadata_5xfad) %>%
dplyr::filter(intervention == "Sacrifice") %>%
ggboxplot(x = "mouse_strain", y = "shannon_entropy", add = "jitter",
add.params = list(color = "mouse_strain"),
title = "Alpha Diversity - 5xFAD Sacrifice",
palette = c("#5F4B8BFF", "#E69A8DFF"), legend = "none",
ylab = "Shannon Entropy", xlab = FALSE) + ylim(1, 6) +
theme(plot.title = element_text(size = 10), axis.title = element_text(size = 6),
axis.text = element_text(size = 8))
shannon_combined <- ggarrange(shannon_3xtg_plot, shannon_5xfad_plot, nrow = 1)
#ggsave(plot = shannon_combined, filename = "alpha_div.svg", device = "svg", dpi = "retina", height = 2, width = 3)
##################
# Log Ratio 3xTg #
##################
phylo_3xtg_ranks <- read_tsv("table_plot/3xtg/3XTG_RPCA_topbot4_lr.tsv")
phylo_3xtg_sac_ranks_plot <- phylo_3xtg_ranks %>%
left_join(metadata_3xtg, by = c("Sample ID" = "sample_name")) %>%
dplyr::filter(study_type == "Sacrifice") %>%
dplyr::mutate(genotype = factor(genotype, levels = c("B6", "3XTG")))%>%
ggboxplot(x = "genotype", y = "Current_Natural_Log_Ratio", add = "jitter",
add.params = list(color = "genotype", alpha = 0.7),
title = "Log Ratio - 3xTg Sacrifice",
palette = c("#5F4B8BFF", "#E69A8DFF"), legend = "none",
ylab = "Ln(Top/Bottom)", xlab = FALSE) +
theme(plot.title = element_text(size = 10), axis.title = element_text(size = 6),
axis.text = element_text(size = 8))
#ggsave(plot = phylo_3xtg_sac_ranks_plot, filename = "log_ratio_sac_3xtg.svg", device = "svg", dpi = "retina", height = 2, width = 1.5)
# Longitudinal ratio
phylo_3xtg_long_ranks_plot <- phylo_3xtg_ranks %>%
left_join(metadata_3xtg, by = c("Sample ID" = "sample_name")) %>%
dplyr::mutate(genotype = factor(genotype, levels = c("B6", "3XTG")))%>%
dplyr::mutate(host_age = as.numeric(host_age)) %>%
dplyr::filter(study_type == "Longitudinal") %>%
ggscatter(x = "host_age", y = "Current_Natural_Log_Ratio", add = "loess",
color = "genotype", title = "Log Ratio - 3xTg Longitudinal", alpha = 0.5,
palette = c("#5F4B8BFF", "#E69A8DFF"), legend = "none",
ylab = "Ln (Top/Bottom)", xlab = "Age (months)") +
theme(plot.title = element_text(size = 10), axis.title = element_text(size = 6),
axis.text = element_text(size = 8))
#ggsave(plot = phylo_3xtg_long_ranks_plot, filename = "log_ratio_sac_long_3xtg.svg", device = "svg", dpi = "retina", height = 2, width = 3)
# Linear mixed effect model
model_3xtg <-  phylo_3xtg_ranks %>%
left_join(metadata_3xtg, by = c("Sample ID" = "sample_name")) %>%
dplyr::mutate(genotype = factor(genotype, levels = c("B6", "3XTG")))%>%
dplyr::mutate(host_age = as.numeric(host_age)) %>%
dplyr::filter(study_type == "Longitudinal") %>%
lmerTest::lmer(formula = Current_Natural_Log_Ratio ~ genotype + host_age + (1|host_subject_id))
summary(model_3xtg)
###################
# Log Ratio 5xFAD #
###################
phylo_5xfad_ranks <- read_tsv("table_plot/5xfad/5XFAD_RPCA_Ax1_topbot10_lr.tsv")
phylo_5xfad_sac_ranks_plot <- phylo_5xfad_ranks %>%
left_join(metadata_5xfad, by = c("Sample ID" = "sample_name")) %>%
dplyr::filter(intervention == "Sacrifice") %>%
dplyr::mutate(mouse_strain = factor(mouse_strain, levels = c("WT 5XFAD", "Het 5XFAD")))%>%
ggboxplot(x = "mouse_strain", y = "Current_Natural_Log_Ratio", add = "jitter",
add.params = list(color = "mouse_strain", alpha = 0.7),
title = "Log Ratio - 5xFAD Sacrifice",
palette = c("#5F4B8BFF", "#E69A8DFF"), legend = "none",
ylab = "Ln(Top/Bottom)", xlab = FALSE) +
theme(plot.title = element_text(size = 10), axis.title = element_text(size = 6),
axis.text = element_text(size = 8))
#ggsave(plot = phylo_5xfad_sac_ranks_plot, filename = "log_ratio_sac_5xfad.svg", device = "svg", dpi = "retina", height = 2, width = 1.5)
# Longitudinal ratio
phylo_5xfad_long_ranks_plot <- phylo_5xfad_ranks %>%
left_join(metadata_5xfad, by = c("Sample ID" = "sample_name")) %>%
dplyr::mutate(mouse_strain = factor(mouse_strain, levels = c("WT 5XFAD", "Het 5XFAD")))%>%
dplyr::mutate(host_age = as.numeric(host_age)) %>%
dplyr::filter(intervention == "Longitudinal") %>%
ggscatter(x = "host_age", y = "Current_Natural_Log_Ratio", add = "loess",
color = "mouse_strain", title = "Log Ratio - 5xfad Longitudinal", alpha = 0.5,
palette = c("#5F4B8BFF", "#E69A8DFF"), legend = "none",
ylab = "Ln (Top/Bottom)", xlab = "Age (months)") +
theme(plot.title = element_text(size = 10), axis.title = element_text(size = 6),
axis.text = element_text(size = 8))
#ggsave(plot = phylo_5xfad_long_ranks_plot, filename = "log_ratio_sac_long_5xfad.svg", device = "svg", dpi = "retina", height = 2, width = 3)
# Linear mixed effect model
model_5xfad <-  phylo_5xfad_ranks %>%
left_join(metadata_5xfad, by = c("Sample ID" = "sample_name")) %>%
dplyr::mutate(mouse_strain = factor(mouse_strain, levels = c("WT 5XFAD", "Het 5XFAD")))%>%
dplyr::mutate(host_age = as.numeric(host_age)) %>%
dplyr::filter(intervention == "Longitudinal") %>%
lmerTest::lmer(formula = Current_Natural_Log_Ratio ~ mouse_strain + host_age + (1|host_subject_id))
summary(model_5xfad)
# 5xFAD sex
phylo_5xfad_ranks_sex <- read_tsv("table_plot/5xfad/5XFAD_phyloRPCA_Ax1_topbot10_lr.tsv")
phylo_5xfad_sac_sex_ranks_plot <- phylo_5xfad_ranks_sex %>%
left_join(metadata_5xfad, by = c("Sample ID" = "sample_name")) %>%
dplyr::filter(intervention == "Sacrifice") %>%
dplyr::mutate(Current_Natural_Log_Ratio = as.numeric(Current_Natural_Log_Ratio)) %>%
ggboxplot(x = "sex", y = "Current_Natural_Log_Ratio", add = "jitter",
add.params = list(color = "sex", alpha = 0.7),
title = "Log Ratio - 5xFAD Sacrifice", legend = "none",
ylab = "Ln(Top/Bottom)", xlab = FALSE) + stat_compare_means() +
theme(plot.title = element_text(size = 10), axis.title = element_text(size = 6),
axis.text = element_text(size = 8))
#ggsave(plot = phylo_5xfad_sac_sex_ranks_plot, filename = "log_ratio_sac_5xfad_sex.svg", device = "svg", dpi = "retina", height = 2, width = 1.5)
#############
# ANCOM-BC2 #
#############
# 3xTg
species_3xtg <- read.delim("table_plot/3xtg/3xtg_species-lvl_table.tsv") %>%
column_to_rownames("X.OTU.ID") %>% t() %>% as.data.frame()
# Remove species present in less than 5% of samples
prop_zeros <- colMeans(species_3xtg == 0) %>% as.data.frame()
colnames(prop_zeros)[1] <- "Proportion"
cols_to_remove <- prop_zeros %>% dplyr::filter(Proportion > 0.95) %>% rownames_to_column("ID")
species_3xtg_filter <- species_3xtg %>% dplyr::select(-cols_to_remove$ID)
# Remove species which account for less that 1% of total counts
reads_species <- species_3xtg_filter %>% colSums() %>% as.data.frame()
colnames(reads_species)[1] <- "reads"
reads_species_filter <- reads_species %>%
dplyr::mutate(proportion = reads / sum(reads)) %>%
dplyr::filter(proportion > 0.00001) %>% rownames_to_column("ID")
species_3xtg_filter2 <- species_3xtg_filter %>% dplyr::select(reads_species_filter$ID)
rownames(species_3xtg_filter2) <- gsub("X14748.", "", rownames(species_3xtg_filter2))
# ANCOM-BC2 - Taxa 3xTg
library(phyloseq)
library(ANCOMBC)
metadata_3xtg_phylo <- metadata_3xtg %>% dplyr::mutate(sample_name = gsub("14748.", "", sample_name)) %>%
dplyr::filter(study_type == "Sacrifice") %>% dplyr::select(sample_name, genotype, host_age, sex) %>%
dplyr::filter(sample_name %in% rownames(species_3xtg_filter2)) %>% arrange(sample_name) %>%
column_to_rownames("sample_name")
species_3xtg_phylo <- species_3xtg_filter2 %>% rownames_to_column("sample_name") %>% arrange(sample_name) %>%
column_to_rownames("sample_name")
ps_3xtg <- phyloseq(otu_table(species_3xtg_phylo, taxa_are_rows = FALSE), sample_data(metadata_3xtg_phylo))
ancom_output <- ancombc2(data = ps_3xtg, fix_formula = "genotype + sex + host_age",
p_adj_method = "holm", pseudo_sens = TRUE, prv_cut = 0.10,
group = "genotype", struc_zero = TRUE, neg_lb = TRUE,
alpha = 0.05, n_cl = 4, verbose = TRUE, global = TRUE,
pairwise = TRUE, dunnet = TRUE, trend = TRUE,
iter_control = list(tol = 1e-2, max_iter = 20, verbose = TRUE),
em_control = list(tol = 1e-5, max_iter = 100),
mdfdr_control = list(fwer_ctrl_method = "holm", B = 100),
trend_control = list(contrast = list(matrix(c(1, 0, -1, 1), nrow = 2, byrow = TRUE),
matrix(c(-1, 0, 1, -1), nrow = 2, byrow = TRUE),
matrix(c(1, 0, 1, -1), nrow = 2, byrow = TRUE)),
node = list(2, 2, 1), solver = "ECOS", B = 100))
ancom_3xtg_filter <- ancom_output$res %>%
dplyr::filter(abs(lfc_genotypeB6) > 2.2) %>%
dplyr::filter(q_genotypeB6 < 0.05) %>%
dplyr::filter(diff_sexmale == FALSE) %>%
arrange(desc(lfc_genotypeB6)) %>%
dplyr::mutate(taxon = gsub(".*;s__", "", taxon)) %>%
dplyr::mutate(lfc_genotypeB6 = - lfc_genotypeB6) %>%
dplyr::mutate(Category = case_when(lfc_genotypeB6 > 0 ~ "Enriched 3xTg",
lfc_genotypeB6 < 0 ~ "Depleted 3xTg")) %>%
mutate(taxon = factor(taxon, levels = taxon))
ancom_3xtg_species <- ancom_3xtg_filter %>% ggplot(aes(x = lfc_genotypeB6, y = taxon, fill = Category)) +
geom_bar(stat = "identity", width = 0.7) +
geom_errorbar(aes(xmin = lfc_genotypeB6 - se_genotypeB6, xmax = lfc_genotypeB6 + se_genotypeB6), width = 0.2) +
scale_fill_manual(values = c("Enriched 3xTg" = "#E69A8DFF", "Depleted 3xTg" = "#5F4B8BFF")) +
labs(x = "Log Fold Change", y = NULL, fill = NULL, title = "ANCOM-BC2 - 3xTg Sacrifice") +
theme_pubr(base_size = 14) +
theme(plot.title = element_text(size = 10), axis.title = element_text(size = 6),
axis.text = element_text(size = 6),
axis.text.y = element_text(hjust = 1),
legend.position = "bottom",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
#ggsave(plot = ancom_3xtg_species, filename = "ancom_3xtg_species_sacrifice.svg", device = "svg", dpi = "retina", height = 4.5, width = 3)
########
# fldc #
########
fldc <- read_csv("table_plot/3xtg/3xtg_indv_fldC_summary-counts_sfilt_sac_genotype_by-host_subject_id.csv") %>%
left_join(metadata_3xtg %>% distinct(host_subject_id, .keep_all = TRUE), by = "host_subject_id")
fldc_plot <- fldc %>%
dplyr::mutate(`genotype.x` = factor(`genotype.x`, levels = c("B6", "3XTG"))) %>%
ggboxplot(x = "genotype.x", y = "read_count_matches", add = "jitter",
add.params = list(color = "genotype.x", alpha = 0.6),
title = "bsh - 3xTg Sacrifice",
palette = c("#5F4B8BFF", "#E69A8DFF"), legend = "none",
ylab = "Read Counts", xlab = FALSE) + stat_compare_means() +
theme(plot.title = element_text(size = 10), axis.title = element_text(size = 6),
axis.text = element_text(size = 8)) +
coord_flip()
fldc_plot
ggsave(plot = fldc_plot, filename = "fldc_plot.svg", device = "svg", dpi = "retina", width = 3, height = 1)
