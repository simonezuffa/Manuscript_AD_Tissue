PCA_plot <- PCA_3xtg_mut_scores %>%
ggscatter(x = "PC1", y = "PC2", color = i, alpha = 0.6,
title = paste("PCA - Liver 3xTG - Mut", i, sep = " "),
xlab = paste("PC1 (", round(PCA_3xtg_mut$prop_expl_var$X[1]*100, digits = 1),"%)", sep = ""),
ylab = paste("PC2 (", round(PCA_3xtg_mut$prop_expl_var$X[2]*100, digits = 1),"%)", sep = ""),
ggtheme = theme_classic()) +
geom_point(data = PCA_3xtg_mut_scores %>% group_by((!!sym(i))) %>%
summarise_at(vars(matches("PC")), mean), aes(PC1, PC2, color = (!!sym(i))), size = 4, shape = 8) +
theme(plot.title = element_text(size = 10), axis.title = element_text(size = 8),
axis.text = element_text(size = 4)) + coord_fixed()
PCA_3xtg_mut_plots[[i]] <- PCA_plot
}
PCA_3xtg_mut_plots_final <- wrap_plots(PCA_3xtg_mut_plots, nrow = 3)
# PCA WT
PCA_3xtg_wt <- mixOmics::pca(data_3xtg_wt_clr %>% select_at(vars(-one_of(nearZeroVar(., names = TRUE)))),
ncomp = 2, center = TRUE, scale = TRUE)
PCA_3xtg_wt_scores <- data.frame(PCA_3xtg_wt$variates$X) %>% rownames_to_column("SampleID") %>%
left_join(metadata_metabolomics)
PCA_3xtg_wt_plots <- list()
for (i in c("box", "host_age", "Plate", "Colonized", "sex")) {
PCA_plot <- PCA_3xtg_wt_scores %>%
ggscatter(x = "PC1", y = "PC2", color = i, alpha = 0.6,
title = paste("PCA - Liver 3xTG - WT", i, sep = " "),
xlab = paste("PC1 (", round(PCA_3xtg_wt$prop_expl_var$X[1]*100, digits = 1),"%)", sep = ""),
ylab = paste("PC2 (", round(PCA_3xtg_wt$prop_expl_var$X[2]*100, digits = 1),"%)", sep = ""),
ggtheme = theme_classic()) +
geom_point(data = PCA_3xtg_wt_scores %>% group_by((!!sym(i))) %>%
summarise_at(vars(matches("PC")), mean), aes(PC1, PC2, color = (!!sym(i))), size = 4, shape = 8) +
theme(plot.title = element_text(size = 10), axis.title = element_text(size = 8),
axis.text = element_text(size = 4)) + coord_fixed()
PCA_3xtg_wt_plots[[i]] <- PCA_plot
}
PCA_3xtg_wt_plots_final <- wrap_plots(PCA_3xtg_wt_plots, nrow = 3)
# PLSDA 3xTG Mut - Colonization
PLSDA_3xtg_mut_colo <- mixOmics::plsda(data_3xtg_mut_clr %>% select_at(vars(-one_of(nearZeroVar(., names = TRUE)))),
PCA_3xtg_mut_scores$Colonized, ncomp = 3, scale = TRUE)
PLSDA_3xtg_mut_colo_scores <- data.frame(PLSDA_3xtg_mut_colo$variates$X) %>%
rownames_to_column("SampleID") %>% left_join(metadata_metabolomics)
PLSDA_3xtg_mut_colo_plot <- PLSDA_3xtg_mut_colo_scores %>%
ggscatter(x = "comp1", y = "comp2", color = "Colonized", alpha = 0.6, title = "PLSDA - Liver 3xTG Mut - Colonization",
xlab = paste("Component 1 (", round(PLSDA_3xtg_mut_colo$prop_expl_var$X[1]*100, digits = 1),"%)", sep = ""),
ylab = paste("Component 2 (", round(PLSDA_3xtg_mut_colo$prop_expl_var$X[2]*100, digits = 1),"%)", sep = ""),
legend.title = "Group", ggtheme = theme_classic()) +
geom_point(data = PLSDA_3xtg_mut_colo_scores %>% group_by(Colonized) %>%
summarise_at(vars(matches("comp")), mean), aes(comp1, comp2, color = Colonized), size = 3, shape = 8) +
theme(plot.title = element_text(size = 10),axis.title = element_text(size = 8),
axis.text = element_text(size = 5)) + coord_fixed()
Loadings_3xtg_mut_strain <- plotLoadings(PLSDA_3xtg_mut_colo, plot = FALSE, contrib = "max") %>%
rownames_to_column() %>% dplyr::select(rowname, GroupContrib)
#perf_plsda_3xtg_mut_colonization <- perf(PLSDA_3xtg_mut_colo, validation = "Mfold", folds = 5, nrepeat = 99, progressBar = TRUE, auc = TRUE)
#plot(perf_plsda_3xtg_mut_colonization, legend = FALSE)
VIPs_3xtg_mut_colo <- as.data.frame(mixOmics::vip(PLSDA_3xtg_mut_colo))
VIPs_3xtg_mut_colo_filter <- dplyr::filter(VIPs_3xtg_mut_colo, VIPs_3xtg_mut_colo$comp1 > 1)
VIPs_3xtg_mut_colo_filter$ID <- rownames(VIPs_3xtg_mut_colo_filter)
VIPs_3xtg_mut_colo_select <- VIPs_3xtg_mut_colo_filter %>% dplyr::select(ID, comp1)
VIPs_3xtg_mut_colo_Load <- VIPs_3xtg_mut_colo_select %>%
left_join(Loadings_3xtg_mut_strain, by = c("ID" = "rowname")) %>%
left_join(info_feature_complete, by = c("ID" = "Feature")) %>% arrange(desc(comp1))
# PLSDA 3xTG WT - Colonization
PLSDA_3xtg_wt_colo <- mixOmics::plsda(data_3xtg_wt_clr %>% select_at(vars(-one_of(nearZeroVar(., names = TRUE)))),
PCA_3xtg_wt_scores$Colonized, ncomp = 2, scale = TRUE)
PLSDA_3xtg_wt_colo_scores <- data.frame(PLSDA_3xtg_wt_colo$variates$X) %>%
rownames_to_column("SampleID") %>% left_join(metadata_metabolomics)
PLSDA_3xtg_wt_colo_plot <- PLSDA_3xtg_wt_colo_scores %>%
ggscatter(x = "comp1", y = "comp2", color = "Colonized", alpha = 0.6, title = "PLSDA - Liver 3xTG WT - Colonization",
xlab = paste("Component 1 (", round(PLSDA_3xtg_wt_colo$prop_expl_var$X[1]*100, digits = 1),"%)", sep = ""),
ylab = paste("Component 2 (", round(PLSDA_3xtg_wt_colo$prop_expl_var$X[2]*100, digits = 1),"%)", sep = ""),
legend.title = "Group", ggtheme = theme_classic()) +
geom_point(data = PLSDA_3xtg_wt_colo_scores %>% group_by(Colonized) %>%
summarise_at(vars(matches("comp")), mean), aes(comp1, comp2, color = Colonized), size = 3, shape = 8) +
theme(plot.title = element_text(size = 10),axis.title = element_text(size = 8),
axis.text = element_text(size = 5)) + coord_fixed()
Loadings_3xtg_wt_strain <- plotLoadings(PLSDA_3xtg_wt_colo, plot = FALSE, contrib = "max") %>%
rownames_to_column() %>% dplyr::select(rowname, GroupContrib)
#perf_plsda_3xtg_wt_colonization <- perf(PLSDA_3xtg_wt_colo, validation = "Mfold", folds = 5, nrepeat = 99, progressBar = TRUE, auc = TRUE)
#plot(perf_plsda_3xtg_wt_colonization, legend = FALSE)
VIPs_3xtg_wt_colo <- as.data.frame(mixOmics::vip(PLSDA_3xtg_wt_colo))
VIPs_3xtg_wt_colo_filter <- dplyr::filter(VIPs_3xtg_wt_colo, VIPs_3xtg_wt_colo$comp1 > 1)
VIPs_3xtg_wt_colo_filter$ID <- rownames(VIPs_3xtg_wt_colo_filter)
VIPs_3xtg_wt_colo_select <- VIPs_3xtg_wt_colo_filter %>% dplyr::select(ID, comp1)
VIPs_3xtg_wt_colo_Load <- VIPs_3xtg_wt_colo_select %>%
left_join(Loadings_3xtg_wt_strain, by = c("ID" = "rowname")) %>%
left_join(info_feature_complete, by = c("ID" = "Feature")) %>% arrange(desc(comp1))
# Sample matching
list_3xtg_microbiome <- list(
`3xTG GF` = (VIPs_3xtg_mut_colo_Load %>% dplyr::filter(GroupContrib == "GF"))$ID,
`3xTG SPF` = (VIPs_3xtg_mut_colo_Load %>% dplyr::filter(GroupContrib == "SPF"))$ID,
`WT GF` =  (VIPs_3xtg_wt_colo_Load %>% dplyr::filter(GroupContrib == "GF"))$ID,
`WT SPF` = (VIPs_3xtg_wt_colo_Load %>% dplyr::filter(GroupContrib == "SPF"))$ID)
colonization_3xtg <- UpSetR::upset(fromList(list_3xtg_microbiome), nsets = 4, nintersects = 6,
point.size = 1.5, line.size = 1, text.scale = 1, keep.order = TRUE,
sets = c("3xTG GF", "3xTG SPF", "WT GF", "WT SPF"),
queries = list(list(query = intersects, params = list("WT SPF",
"3xTG SPF"), color = "steelblue1", active = T),
list(query = intersects, params = list("WT GF",
"3xTG GF"),color = "orange", active = T)))
#pdf(file="3xtg_liver_upset_colonization.pdf", width = 3, height = 2.5)
#colonization_3xtg
#dev.off()
# Check common features spf or gf
features_3xtg_spf <- VIPs_3xtg_mut_colo_Load %>%
dplyr::filter(GroupContrib == "SPF") %>%
dplyr::select(ID, comp1) %>%
inner_join(VIPs_3xtg_wt_colo_Load %>%
dplyr::filter(GroupContrib == "SPF"), by = c("ID" = "ID"))
features_3xtg_gf <- VIPs_3xtg_mut_colo_Load %>%
dplyr::filter(GroupContrib == "GF") %>%
dplyr::select(ID, comp1) %>%
inner_join(VIPs_3xtg_wt_colo_Load %>%
dplyr::filter(GroupContrib == "GF"), by = c("ID" = "ID"))
#write_csv(x = features_3xtg_spf, file = "3xtg_liver_colonization_spf.csv")
#write_csv(x = features_3xtg_gf, file = "3xtg_liver_colonization_gf.csv")
############
# Compare 3xtg male v wt male to 3xtg female v wt female to see strain effect of sex
############
data_3xtg_male <- data_sample %>% dplyr::filter(SampleID %in% sample_3xtg$SampleID) %>%
dplyr::filter(SampleID %in% sample_male$SampleID) %>%
dplyr::filter(!(SampleID %in% c("L3xtg_43", "L3xtg_55", "L3xtg_57", "L3xtg_59",
"L3xtg_49", "L3xtg_144", "L3xtg_117")))
data_3xtg_female <- data_sample %>% dplyr::filter(SampleID %in% sample_3xtg$SampleID) %>%
dplyr::filter(SampleID %in% sample_female$SampleID) %>%
dplyr::filter(!(SampleID %in% c("L3xtg_43", "L3xtg_55", "L3xtg_57", "L3xtg_59",
"L3xtg_49", "L3xtg_144", "L3xtg_117")))
# RCLR transformation
data_3xtg_male_clr <- decostand(data_3xtg_male %>% column_to_rownames("SampleID"), method = "rclr")
data_3xtg_female_clr <- decostand(data_3xtg_female %>% column_to_rownames("SampleID"), method = "rclr")
# PCA Male
PCA_3xtg_male <- mixOmics::pca(data_3xtg_male_clr %>% select_at(vars(-one_of(nearZeroVar(., names = TRUE)))),
ncomp = 2, center = TRUE, scale = TRUE)
PCA_3xtg_male_scores <- data.frame(PCA_3xtg_male$variates$X) %>% rownames_to_column("SampleID") %>%
left_join(metadata_metabolomics)
PCA_3xtg_male_plots <- list()
for (i in c("box", "host_age", "Plate", "Strain", "Colonized")) {
PCA_plot <- PCA_3xtg_male_scores %>%
ggscatter(x = "PC1", y = "PC2", color = i, alpha = 0.6,
title = paste("PCA - Liver 3xTG Male", i, sep = " "),
xlab = paste("PC1 (", round(PCA_3xtg_male$prop_expl_var$X[1]*100, digits = 1),"%)", sep = ""),
ylab = paste("PC2 (", round(PCA_3xtg_male$prop_expl_var$X[2]*100, digits = 1),"%)", sep = ""),
ggtheme = theme_classic()) +
geom_point(data = PCA_3xtg_male_scores %>% group_by((!!sym(i))) %>%
summarise_at(vars(matches("PC")), mean), aes(PC1, PC2, color = (!!sym(i))), size = 4, shape = 8) +
theme(plot.title = element_text(size = 10), axis.title = element_text(size = 8),
axis.text = element_text(size = 4)) + coord_fixed()
PCA_3xtg_male_plots[[i]] <- PCA_plot
}
PCA_3xtg_male_plots_final <- wrap_plots(PCA_3xtg_male_plots, nrow = 3)
# PCA Female
PCA_3xtg_female <- mixOmics::pca(data_3xtg_female_clr %>% select_at(vars(-one_of(nearZeroVar(., names = TRUE)))),
ncomp = 2, center = TRUE, scale = TRUE)
PCA_3xtg_female_scores <- data.frame(PCA_3xtg_female$variates$X) %>% rownames_to_column("SampleID") %>%
left_join(metadata_metabolomics)
PCA_3xtg_female_plots <- list()
for (i in c("box", "host_age", "Plate", "Strain", "Colonized")) {
PCA_plot <- PCA_3xtg_female_scores %>%
ggscatter(x = "PC1", y = "PC2", color = i, alpha = 0.6,
title = paste("PCA - Liver 3xTG Female", i, sep = " "),
xlab = paste("PC1 (", round(PCA_3xtg_female$prop_expl_var$X[1]*100, digits = 1),"%)", sep = ""),
ylab = paste("PC2 (", round(PCA_3xtg_female$prop_expl_var$X[2]*100, digits = 1),"%)", sep = ""),
ggtheme = theme_classic()) +
geom_point(data = PCA_3xtg_female_scores %>% group_by((!!sym(i))) %>%
summarise_at(vars(matches("PC")), mean), aes(PC1, PC2, color = (!!sym(i))), size = 4, shape = 8) +
theme(plot.title = element_text(size = 10), axis.title = element_text(size = 8),
axis.text = element_text(size = 4)) + coord_fixed()
PCA_3xtg_female_plots[[i]] <- PCA_plot
}
PCA_3xtg_female_plots_final <- wrap_plots(PCA_3xtg_female_plots, nrow = 3)
# PLSDA 3xTG Male - Strain
PLSDA_3xtg_male_strain <- mixOmics::plsda(data_3xtg_male_clr %>% select_at(vars(-one_of(nearZeroVar(., names = TRUE)))),
PCA_3xtg_male_scores$Strain, ncomp = 4, scale = TRUE)
PLSDA_3xtg_male_strain_scores <- data.frame(PLSDA_3xtg_male_strain$variates$X) %>%
rownames_to_column("SampleID") %>% left_join(metadata_metabolomics)
PLSDA_3xtg_male_strain_plot <- PLSDA_3xtg_male_strain_scores %>%
ggscatter(x = "comp1", y = "comp2", color = "Strain", alpha = 0.6, title = "PLSDA - Liver 3xTG Male - Strain",
xlab = paste("Component 1 (", round(PLSDA_3xtg_male_strain$prop_expl_var$X[1]*100, digits = 1),"%)", sep = ""),
ylab = paste("Component 2 (", round(PLSDA_3xtg_male_strain$prop_expl_var$X[2]*100, digits = 1),"%)", sep = ""),
legend.title = "Group", ggtheme = theme_classic()) +
geom_point(data = PLSDA_3xtg_male_strain_scores %>% group_by(Strain) %>%
summarise_at(vars(matches("comp")), mean), aes(comp1, comp2, color = Strain), size = 3, shape = 8) +
theme(plot.title = element_text(size = 10),axis.title = element_text(size = 8),
axis.text = element_text(size = 5)) + coord_fixed()
Loadings_3xtg_male_strain <- plotLoadings(PLSDA_3xtg_male_strain, plot = FALSE, contrib = "max") %>%
rownames_to_column() %>% dplyr::select(rowname, GroupContrib)
#perf_plsda_3xtg_male_strain <- perf(PLSDA_3xtg_male_strain, validation = "Mfold", folds = 5, nrepeat = 99, progressBar = TRUE, auc = TRUE)
#plot(perf_plsda_3xtg_male_strain, legend = FALSE)
VIPs_3xtg_male_strain <- as.data.frame(mixOmics::vip(PLSDA_3xtg_male_strain))
VIPs_3xtg_male_strain_filter <- dplyr::filter(VIPs_3xtg_male_strain, VIPs_3xtg_male_strain$comp1 > 1)
VIPs_3xtg_male_strain_filter$ID <- rownames(VIPs_3xtg_male_strain_filter)
VIPs_3xtg_male_strain_select <- VIPs_3xtg_male_strain_filter %>% dplyr::select(ID, comp1)
VIPs_3xtg_male_strain_Load <- VIPs_3xtg_male_strain_select %>%
left_join(Loadings_3xtg_male_strain, by = c("ID" = "rowname")) %>%
left_join(info_feature_complete, by = c("ID" = "Feature")) %>% arrange(desc(comp1))
# PLSDA 3xTG Male - Colonization
PLSDA_3xtg_male_colo <- mixOmics::plsda(data_3xtg_male_clr %>% select_at(vars(-one_of(nearZeroVar(., names = TRUE)))),
PCA_3xtg_male_scores$Colonized, ncomp = 3, scale = TRUE)
PLSDA_3xtg_male_colo_scores <- data.frame(PLSDA_3xtg_male_colo$variates$X) %>%
rownames_to_column("SampleID") %>% left_join(metadata_metabolomics)
PLSDA_3xtg_male_colo_plot <- PLSDA_3xtg_male_colo_scores %>%
ggscatter(x = "comp1", y = "comp2", color = "Colonized", alpha = 0.6, title = "PLSDA - Liver 3xTG Male - Colonized",
xlab = paste("Component 1 (", round(PLSDA_3xtg_male_colo$prop_expl_var$X[1]*100, digits = 1),"%)", sep = ""),
ylab = paste("Component 2 (", round(PLSDA_3xtg_male_colo$prop_expl_var$X[2]*100, digits = 1),"%)", sep = ""),
legend.title = "Group", ggtheme = theme_classic()) +
geom_point(data = PLSDA_3xtg_male_colo_scores %>% group_by(Colonized) %>%
summarise_at(vars(matches("comp")), mean), aes(comp1, comp2, color = Colonized), size = 3, shape = 8) +
theme(plot.title = element_text(size = 10),axis.title = element_text(size = 8),
axis.text = element_text(size = 5)) + coord_fixed()
Loadings_3xtg_male_colo <- plotLoadings(PLSDA_3xtg_male_colo, plot = FALSE, contrib = "max") %>%
rownames_to_column() %>% dplyr::select(rowname, GroupContrib)
#perf_plsda_3xtg_male_colo <- perf(PLSDA_3xtg_male_colo, validation = "Mfold", folds = 5, nrepeat = 99, progressBar = TRUE, auc = TRUE)
#plot(perf_plsda_3xtg_male_colo, legend = FALSE)
VIPs_3xtg_male_colo <- as.data.frame(mixOmics::vip(PLSDA_3xtg_male_colo))
VIPs_3xtg_male_colo_filter <- dplyr::filter(VIPs_3xtg_male_colo, VIPs_3xtg_male_colo$comp1 > 1)
VIPs_3xtg_male_colo_filter$ID <- rownames(VIPs_3xtg_male_colo_filter)
VIPs_3xtg_male_colo_select <- VIPs_3xtg_male_colo_filter %>% dplyr::select(ID, comp1)
VIPs_3xtg_male_colo_Load <- VIPs_3xtg_male_colo_select %>%
left_join(Loadings_3xtg_male_colo, by = c("ID" = "rowname")) %>%
left_join(info_feature_complete, by = c("ID" = "Feature")) %>% arrange(desc(comp1))
# PLSDA 3xTG Female - Strain
PLSDA_3xtg_female_strain <- mixOmics::plsda(data_3xtg_female_clr %>% select_at(vars(-one_of(nearZeroVar(., names = TRUE)))),
PCA_3xtg_female_scores$Strain, ncomp = 3, scale = TRUE)
PLSDA_3xtg_female_strain_scores <- data.frame(PLSDA_3xtg_female_strain$variates$X) %>%
rownames_to_column("SampleID") %>% left_join(metadata_metabolomics)
PLSDA_3xtg_female_strain_plot <- PLSDA_3xtg_female_strain_scores %>%
ggscatter(x = "comp1", y = "comp2", color = "Strain", alpha = 0.6, title = "PLSDA - Liver 3xTG Female - Strain",
xlab = paste("Component 1 (", round(PLSDA_3xtg_female_strain$prop_expl_var$X[1]*100, digits = 1),"%)", sep = ""),
ylab = paste("Component 2 (", round(PLSDA_3xtg_female_strain$prop_expl_var$X[2]*100, digits = 1),"%)", sep = ""),
legend.title = "Group", ggtheme = theme_classic()) +
geom_point(data = PLSDA_3xtg_female_strain_scores %>% group_by(Strain) %>%
summarise_at(vars(matches("comp")), mean), aes(comp1, comp2, color = Strain), size = 3, shape = 8) +
theme(plot.title = element_text(size = 10),axis.title = element_text(size = 8),
axis.text = element_text(size = 5)) + coord_fixed()
Loadings_3xtg_female_strain <- plotLoadings(PLSDA_3xtg_female_strain, plot = FALSE, contrib = "max") %>%
rownames_to_column() %>% dplyr::select(rowname, GroupContrib)
#perf_plsda_3xtg_female_strain <- perf(PLSDA_3xtg_female_strain, validation = "Mfold", folds = 5, nrepeat = 99, progressBar = TRUE, auc = TRUE)
#plot(perf_plsda_3xtg_female_strain, legend = FALSE)
VIPs_3xtg_female_strain <- as.data.frame(mixOmics::vip(PLSDA_3xtg_female_strain))
VIPs_3xtg_female_strain_filter <- dplyr::filter(VIPs_3xtg_female_strain, VIPs_3xtg_female_strain$comp1 > 1)
VIPs_3xtg_female_strain_filter$ID <- rownames(VIPs_3xtg_female_strain_filter)
VIPs_3xtg_female_strain_select <- VIPs_3xtg_female_strain_filter %>% dplyr::select(ID, comp1)
VIPs_3xtg_female_strain_Load <- VIPs_3xtg_female_strain_select %>%
left_join(Loadings_3xtg_female_strain, by = c("ID" = "rowname")) %>%
left_join(info_feature_complete, by = c("ID" = "Feature")) %>% arrange(desc(comp1))
# PLSDA 3xTG Female - Colonization
PLSDA_3xtg_female_colo <- mixOmics::plsda(data_3xtg_female_clr %>% select_at(vars(-one_of(nearZeroVar(., names = TRUE)))),
PCA_3xtg_female_scores$Colonized, ncomp = 3, scale = TRUE)
PLSDA_3xtg_female_colo_scores <- data.frame(PLSDA_3xtg_female_colo$variates$X) %>%
rownames_to_column("SampleID") %>% left_join(metadata_metabolomics)
PLSDA_3xtg_female_colo_plot <- PLSDA_3xtg_female_colo_scores %>%
ggscatter(x = "comp1", y = "comp2", color = "Colonized", alpha = 0.6, title = "PLSDA - Liver 3xTG Female - Colonized",
xlab = paste("Component 1 (", round(PLSDA_3xtg_female_colo$prop_expl_var$X[1]*100, digits = 1),"%)", sep = ""),
ylab = paste("Component 2 (", round(PLSDA_3xtg_female_colo$prop_expl_var$X[2]*100, digits = 1),"%)", sep = ""),
legend.title = "Group", ggtheme = theme_classic()) +
geom_point(data = PLSDA_3xtg_female_colo_scores %>% group_by(Colonized) %>%
summarise_at(vars(matches("comp")), mean), aes(comp1, comp2, color = Colonized), size = 3, shape = 8) +
theme(plot.title = element_text(size = 10),axis.title = element_text(size = 8),
axis.text = element_text(size = 5)) + coord_fixed()
Loadings_3xtg_female_colo <- plotLoadings(PLSDA_3xtg_female_colo, plot = FALSE, contrib = "max") %>%
rownames_to_column() %>% dplyr::select(rowname, GroupContrib)
#perf_plsda_3xtg_female_colo <- perf(PLSDA_3xtg_female_colo, validation = "Mfold", folds = 5, nrepeat = 99, progressBar = TRUE, auc = TRUE)
#plot(perf_plsda_3xtg_female_colo, legend = FALSE)
VIPs_3xtg_female_colo <- as.data.frame(mixOmics::vip(PLSDA_3xtg_female_colo))
VIPs_3xtg_female_colo_filter <- dplyr::filter(VIPs_3xtg_female_colo, VIPs_3xtg_female_colo$comp1 > 1)
VIPs_3xtg_female_colo_filter$ID <- rownames(VIPs_3xtg_female_colo_filter)
VIPs_3xtg_female_colo_select <- VIPs_3xtg_female_colo_filter %>% dplyr::select(ID, comp1)
VIPs_3xtg_female_colo_Load <- VIPs_3xtg_female_colo_select %>%
left_join(Loadings_3xtg_female_colo, by = c("ID" = "rowname")) %>%
left_join(info_feature_complete, by = c("ID" = "Feature")) %>% arrange(desc(comp1))
# Sample matching
list_3xtg_sex <- list(
`Male 3xTG` = (VIPs_3xtg_male_strain_Load %>% dplyr::filter(GroupContrib == "Mut"))$ID,
`Male WT` =  (VIPs_3xtg_male_strain_Load %>% dplyr::filter(GroupContrib == "WT"))$ID,
`Female 3xTG` = (VIPs_3xtg_female_strain_Load %>% dplyr::filter(GroupContrib == "Mut"))$ID,
`Female WT` = (VIPs_3xtg_female_strain_Load %>% dplyr::filter(GroupContrib == "WT"))$ID,
`Male GF` = (VIPs_3xtg_male_colo_Load %>% dplyr::filter(GroupContrib == "GF"))$ID,
`Male SPF` =  (VIPs_3xtg_male_colo_Load %>% dplyr::filter(GroupContrib == "SPF"))$ID,
`Female GF` = (VIPs_3xtg_female_colo_Load %>% dplyr::filter(GroupContrib == "GF"))$ID,
`Female SPF` = (VIPs_3xtg_female_colo_Load %>% dplyr::filter(GroupContrib == "SPF"))$ID)
sex_3xtg <- UpSetR::upset(fromList(list_3xtg_sex), nsets = 8, nintersects = NA,
point.size = 1.5, line.size = 1, text.scale = 1, keep.order = TRUE,
sets = c("Male 3xTG", "Male WT", "Female 3xTG", "Female WT",
"Male GF", "Male SPF", "Female GF", "Female SPF"),
queries = list(list(query = intersects, params = list("Female SPF",
"Male SPF"), color = "steelblue1", active = T),
list(query = intersects, params = list("Female GF",
"Male GF"),color = "steelblue1", active = T),
list(query = intersects, params = list("Female 3xTG",
"Male 3xTG"),color = "orange", active = T),
list(query = intersects, params = list("Female WT",
"Male WT"),color = "orange", active = T)))
###################
# Combine microbiome and strain effect models to see intersection
###################
list_3xtg_intersection <- list(
`3xTG - GF` = (VIPs_3xtg_mut_colo_Load %>% dplyr::filter(GroupContrib == "GF"))$ID,
`3xTG - SPF` = (VIPs_3xtg_mut_colo_Load %>% dplyr::filter(GroupContrib == "SPF"))$ID,
`WT - GF` =  (VIPs_3xtg_wt_colo_Load %>% dplyr::filter(GroupContrib == "GF"))$ID,
`WT - SPF` = (VIPs_3xtg_wt_colo_Load %>% dplyr::filter(GroupContrib == "SPF"))$ID,
`GF - 3xTG` = (VIPs_3xtg_gf_strain_Load %>% dplyr::filter(GroupContrib == "Mut"))$ID,
`GF - WT` =  (VIPs_3xtg_gf_strain_Load %>% dplyr::filter(GroupContrib == "WT"))$ID,
`SPF - 3xTG` = (VIPs_3xtg_spf_strain_Load %>% dplyr::filter(GroupContrib == "Mut"))$ID,
`SPF - WT` = (VIPs_3xtg_spf_strain_Load %>% dplyr::filter(GroupContrib == "WT"))$ID)
intersection_3xtg <- UpSetR::upset(fromList(list_3xtg_intersection), nsets = 8, nintersects = NA,
point.size = 1.5, line.size = 1, text.scale = 1,
keep.order = TRUE,
sets = c("3xTG - GF", "3xTG - SPF", "WT - GF", "WT - SPF",
"GF - 3xTG", "GF - WT", "SPF - 3xTG", "SPF - WT"),
queries = list(list(query = intersects, params = list("SPF - WT",
"WT - SPF"), color = "steelblue1", active = T),
list(query = intersects, params = list("SPF - 3xTG",
"3xTG - SPF"),color = "steelblue1", active = T),
list(query = intersects, params = list("SPF - WT",
"GF - WT"),color = "green3", active = T),
list(query = intersects, params = list("SPF - 3xTG",
"GF - 3xTG"),color = "green3", active = T),
list(query = intersects, params = list("WT - SPF",
"3xTG - SPF"),color = "green4", active = T),
list(query = intersects, params = list("WT - GF",
"3xTG - GF"),color = "green4", active = T),
list(query = intersects, params = list("GF - 3xTG",
"3xTG - GF"),color = "orange", active = T),
list(query = intersects, params = list("GF - WT",
"WT - GF"),color = "orange", active = T)))
#pdf(file="3xtg_liver_upset_genotype_colonization.pdf", width = 6.5, height = 4.5)
#intersection_3xtg
#dev.off()
# Extract IDs only present in `3xTG - SPF`, `SPF - 3xTG`, and `3xTG - SPF` U `SPF - 3xTG`
unique_3xtg_spf1 <- data.frame(ID  = setdiff(
list_3xtg_intersection$`3xTG - SPF`,
c(list_3xtg_intersection$`3xTG - GF`, list_3xtg_intersection$`WT - GF`, list_3xtg_intersection$`WT - SPF`,
list_3xtg_intersection$`GF - 3xTG`, list_3xtg_intersection$`GF - WT`, list_3xtg_intersection$`SPF - 3xTG`,
list_3xtg_intersection$`SPF - WT`)), Group = "3xtg_spf")
unique_spf_3xtg1 <- data.frame(ID  = setdiff(
list_3xtg_intersection$`SPF - 3xTG`,
c(list_3xtg_intersection$`3xTG - GF`, list_3xtg_intersection$`WT - GF`, list_3xtg_intersection$`WT - SPF`,
list_3xtg_intersection$`GF - 3xTG`, list_3xtg_intersection$`GF - WT`, list_3xtg_intersection$`3xTG - SPF`,
list_3xtg_intersection$`SPF - WT`)), Group = "spf_3xtg")
intersect_3xtg_spf_only <- intersect(
list_3xtg_intersection$`3xTG - SPF`,
list_3xtg_intersection$`SPF - 3xTG`)
unique_3xtg_spf_comb <- data.frame(ID  = setdiff(
intersect_3xtg_spf_only,
c(list_3xtg_intersection$`3xTG - GF`, list_3xtg_intersection$`WT - GF`, list_3xtg_intersection$`GF - 3xTG`,
list_3xtg_intersection$`GF - WT`, list_3xtg_intersection$`WT - SPF`, list_3xtg_intersection$`SPF - WT`)), Group = "3xtg_both")
combined_unique_3xtg_3xtg_spf <- rbind(unique_3xtg_spf1, unique_spf_3xtg1, unique_3xtg_spf_comb) %>%
left_join(info_feature_complete, by = c("ID" = "Feature"))
# Extract IDs only present in `WT - SPF`, `SPF - WT`, and `WT - SPF` U `SPF - WT`
unique_wt_spf1 <- data.frame(ID  = setdiff(
list_3xtg_intersection$`WT - SPF`,
c(list_3xtg_intersection$`3xTG - GF`, list_3xtg_intersection$`WT - GF`, list_3xtg_intersection$`3xTG - SPF`,
list_3xtg_intersection$`GF - 3xTG`, list_3xtg_intersection$`GF - WT`, list_3xtg_intersection$`SPF - 3xTG`,
list_3xtg_intersection$`SPF - WT`)), Group = "wt_spf")
unique_spf_wt1 <- data.frame(ID = setdiff(
list_3xtg_intersection$`SPF - WT`,
c(list_3xtg_intersection$`3xTG - GF`, list_3xtg_intersection$`WT - GF`, list_3xtg_intersection$`WT - SPF`,
list_3xtg_intersection$`GF - 3xTG`, list_3xtg_intersection$`GF - WT`, list_3xtg_intersection$`3xTG - SPF`,
list_3xtg_intersection$`SPF - 3xTG`)), Group = "spf_wt")
intersect_wt_spf_only <- intersect(
list_3xtg_intersection$`WT - SPF`,
list_3xtg_intersection$`SPF - WT`)
unique_wt_spf_comb <- data.frame(ID = setdiff(
intersect_wt_spf_only,
c(list_3xtg_intersection$`3xTG - GF`, list_3xtg_intersection$`WT - GF`, list_3xtg_intersection$`GF - 3xTG`,
list_3xtg_intersection$`GF - WT`, list_3xtg_intersection$`3xTG - SPF`, list_3xtg_intersection$`SPF - 3xTG`)), Group = "wt_both")
combined_unique_3xtg_wt_spf <- rbind(unique_wt_spf1, unique_spf_wt1, unique_wt_spf_comb) %>%
left_join(info_feature_complete, by = c("ID" = "Feature"))
# Extract feature of interest and check difference between strains colonized
exclusive_3xtg_liver <- rbind(combined_unique_3xtg_3xtg_spf, combined_unique_3xtg_wt_spf)
data_3xtg_feat <- data_sample %>% dplyr::filter(SampleID %in% sample_3xtg$SampleID) %>%
dplyr::filter(!(SampleID %in% c("L3xtg_43", "L3xtg_55", "L3xtg_57", "L3xtg_59",
"L3xtg_49", "L3xtg_144", "L3xtg_117"))) %>%
dplyr::select("SampleID", combined_unique_3xtg_3xtg_spf$ID, combined_unique_3xtg_wt_spf$ID) %>%
dplyr::mutate(WT = rowSums(select(., combined_unique_3xtg_wt_spf$ID))) %>%
dplyr::mutate(Mut = rowSums(select(., combined_unique_3xtg_3xtg_spf$ID))) %>%
dplyr::mutate(Ratio = log(WT/Mut)) %>%
left_join(metadata_metabolomics)
vip_3xtg_spf_wt <- VIPs_3xtg_spf_strain_Load %>% dplyr::filter(GroupContrib == "WT")
vip_3xtg_spf_mut <- VIPs_3xtg_spf_strain_Load %>% dplyr::filter(GroupContrib == "Mut")
data_3xtg_vip_spf <- data_sample %>% dplyr::filter(SampleID %in% sample_3xtg$SampleID) %>%
dplyr::filter(!(SampleID %in% c("L3xtg_43", "L3xtg_55", "L3xtg_57", "L3xtg_59",
"L3xtg_49", "L3xtg_144", "L3xtg_117"))) %>%
dplyr::select("SampleID", VIPs_3xtg_spf_strain_Load$ID) %>%
dplyr::mutate(WT = rowSums(select(., vip_3xtg_spf_wt$ID))) %>%
dplyr::mutate(Mut = rowSums(select(., vip_3xtg_spf_mut$ID))) %>%
dplyr::mutate(Ratio = log(WT/Mut)) %>%
left_join(metadata_metabolomics)
# Plot ratio
data_3xtg_feat %>%
dplyr::filter(Colonized == "SPF") %>%
ggboxplot(y = "Ratio", x = "Strain", add = "jitter") +
stat_compare_means()
plot_ratio_liver_3xtg <- data_3xtg_vip_spf %>%
dplyr::filter(Colonized == "SPF") %>%
dplyr::mutate(Strain = factor(Strain, levels = c("WT", "Mut"))) %>%
ggboxplot(y = "Ratio", x = "Strain", add = "jitter", ylab = "Ln(WT/Mut)",
add.params = list(color = "Strain", alpha = 0.6), legend = "none",
palette = c("#E69A8DFF", "#5F4B8BFF"), xlab = "Liver",
title = "Differential features from PLS-DA models") +
stat_compare_means() +
theme(plot.title = element_text(size = 8),axis.title = element_text(size = 7),
axis.text = element_text(size = 6))
#ggsave(plot = plot_ratio_liver_3xtg, filename = "3xtg_liver_ratio.svg", device = "svg", dpi = "retina", width = 1.5, height = 2.5)
#write_csv(x = data_3xtg_vip_spf, file = "liver_ratio_3xtg.csv")
# Cliff's Delta
cliff.delta((data_3xtg_vip_spf %>%
dplyr::filter(Colonized == "SPF" & Strain == "WT"))$Ratio,
(data_3xtg_vip_spf %>%
dplyr::filter(Colonized == "SPF" & Strain == "Mut"))$Ratio)
# Extract features of interest for MN
liver_3xtg_interest <- VIPs_3xtg_spf_strain_Load %>%
dplyr::select(ID, comp1, GroupContrib) %>%
left_join(VIPs_3xtg_gf_strain_Load %>%
dplyr::select(ID, comp1, GroupContrib), by = c("ID" = "ID")) %>%
left_join(VIPs_3xtg_mut_colo_Load %>%
dplyr::select(ID, comp1, GroupContrib), by = c("ID" = "ID")) %>%
left_join(VIPs_3xtg_wt_colo_Load %>%
dplyr::select(ID, comp1, GroupContrib), by = c("ID" = "ID")) %>%
dplyr::mutate(VIP_mean = rowMeans(dplyr::select(., comp1.x, comp1.x.x, comp1.y, comp1.y.y), na.rm = TRUE)) %>%
left_join(exclusive_3xtg_liver %>% dplyr::select(ID, Group)) %>% arrange(desc(VIP_mean))
colnames(liver_3xtg_interest) <- c("ID", "VIP1", "SPF_genotype", "VIP2", "GF_genotype",
"VIP3", "3xTG_colonization", "VIP4", "WT_colonization",
"VIP_mean", "Exclusivity")
liver_3xtg_interest <- liver_3xtg_interest %>%
dplyr::mutate(Genotype = case_when(SPF_genotype == GF_genotype ~ "Yes",
TRUE ~ "No")) %>%
dplyr::mutate(Microbiome = case_when(`3xTG_colonization` == WT_colonization ~ "Yes",
TRUE ~ "No")) %>%
left_join(info_feature_complete, by = c("ID" = "Feature"))
#write_csv(x = liver_3xtg_interest, file = "3xtg_liver_features_info_mn.csv")
# Plot ratio of tau/free for di- and tri-hydroxy bas
tau_di <- info_feature_complete %>%
dplyr::filter(str_detect(pattern = regex("tau", ignore_case = TRUE), Compound_Name)) %>%
dplyr::filter(str_detect(pattern = regex("deoxy", ignore_case = TRUE), Compound_Name))
View(tau_di)
tau_tri <- info_feature_complete %>%
dplyr::filter(str_detect(pattern = regex("tau", ignore_case = TRUE), Compound_Name)) %>%
dplyr::filter(str_detect(pattern = regex("Trihydroxylated|Taurocholic acid|taurocholic acid", ignore_case = TRUE), Compound_Name))
View(tau_tri)
ba_di <- info_feature_complete %>%
dplyr::filter(str_detect(pattern = regex("cholic", ignore_case = TRUE), Compound_Name)) %>%
dplyr::filter(str_detect(pattern = regex("Deoxycholic acid|deoxycholic acid"), Compound_Name)) %>%
dplyr::filter(!(str_detect(pattern = regex("tau|Trihydroxylated|Phenylalanine", ignore_case = TRUE), Compound_Name)))
View(ba_di)
ba_di <- info_feature_complete %>%
dplyr::filter(str_detect(pattern = regex("cholic", ignore_case = TRUE), Compound_Name)) %>%
dplyr::filter(str_detect(pattern = regex("Deoxycholic acid|deoxycholic acid"), Compound_Name))
View(ba_di)
ba_tri <- info_feature_complete %>%
dplyr::filter(str_detect(pattern = regex("cholic", ignore_case = TRUE), Compound_Name)) %>%
dplyr::filter(!(str_detect(pattern = regex("Deoxycholic acid|deoxycholic acid"), Compound_Name))) %>%
dplyr::filter(!(str_detect(pattern = regex("tau|TrihydroxylatedPhenylalanine", ignore_case = TRUE), Compound_Name)))%>%
dplyr::filter(!(str_detect(pattern = regex("Glyco|mono|Histidine", ignore_case = TRUE), Compound_Name))) %>%
dplyr::filter(RT < 5)
View(ba_tri)
ba_tri <- info_feature_complete %>%
dplyr::filter(str_detect(pattern = regex("cholic", ignore_case = TRUE), Compound_Name)) %>%
dplyr::filter(!(str_detect(pattern = regex("Deoxycholic acid|deoxycholic acid"), Compound_Name))) %>%
dplyr::filter(!(str_detect(pattern = regex("tau|TrihydroxylatedPhenylalanine", ignore_case = TRUE), Compound_Name)))%>%
dplyr::filter(!(str_detect(pattern = regex("Glyco|mono|Histidine", ignore_case = TRUE), Compound_Name))) %>%
dplyr::filter(RT < 5)
data_3xtg_bas <- data_sample %>% dplyr::filter(SampleID %in% sample_3xtg$SampleID) %>%
dplyr::select("SampleID", tau_di$Feature, tau_tri$Feature, ba_di$Feature, ba_tri$Feature) %>%
dplyr::mutate(tau_di = rowSums(select(., tau_di$Feature))) %>%
dplyr::mutate(tau_tri = rowSums(select(., tau_tri$Feature))) %>%
dplyr::mutate(ba_di = rowSums(select(., ba_di$Feature))) %>%
dplyr::mutate(ba_tri = rowSums(select(., ba_tri$Feature))) %>%
dplyr::mutate(Ratio_di = log(ba_di/tau_di)) %>%
dplyr::mutate(Ratio_tri = log(ba_tri/tau_tri)) %>%
dplyr::select(SampleID, Ratio_di, Ratio_tri) %>%
left_join(metadata_metabolomics) %>%
dplyr::mutate(across(c("Ratio_di", "Ratio_tri"), ~ if_else(is.infinite(.), NA_real_, .))) %>%
dplyr::filter(Colonized == "SPF") %>%
dplyr::mutate(Strain = factor(Strain, levels = c("WT", "Mut")))
di_plot <- data_3xtg_bas %>%
ggboxplot(x = "Strain", y = "Ratio_di", add = "jitter", ylab = "Ln(Free/Tau)",
add.params = list(color = "Strain", alpha = 0.6) ,legend = "none", xlab = "Cecum",
palette = c("#E69A8DFF", "#5F4B8BFF"), title = "Di-hydroxilated bile acids") +
theme(plot.title = element_text(size = 8),axis.title = element_text(size = 7),
axis.text = element_text(size = 6)) + stat_compare_means()
data_3xtg_bas <- data_sample %>% dplyr::filter(SampleID %in% sample_3xtg$SampleID) %>%
dplyr::select("SampleID", tau_di$Feature, tau_tri$Feature, ba_di$Feature, ba_tri$Feature) %>%
dplyr::mutate(tau_di = rowSums(select(., tau_di$Feature))) %>%
dplyr::mutate(tau_tri = rowSums(select(., tau_tri$Feature))) %>%
dplyr::mutate(ba_di = rowSums(select(., ba_di$Feature))) %>%
dplyr::mutate(ba_tri = rowSums(select(., ba_tri$Feature))) %>%
dplyr::mutate(Ratio_di = log(ba_di/tau_di)) %>%
dplyr::mutate(Ratio_tri = log(ba_tri/tau_tri)) %>%
dplyr::select(SampleID, Ratio_di, Ratio_tri) %>%
left_join(metadata_metabolomics) %>%
dplyr::mutate(across(c("Ratio_di", "Ratio_tri"), ~ if_else(is.infinite(.), NA_real_, .))) %>%
dplyr::filter(Colonized == "SPF") %>%
dplyr::mutate(Strain = factor(Strain, levels = c("WT", "Mut")))
View(VIPs_3xtg_spf_strain_Load)
rav_lib <- read_tsv("candidate_BA_with_best_annotations.tsv")
annotations_expand <- annotations %>% left_join(rav_lib, by = c("SepctrumID", "quety_id"))
View(rav_lib)
View(annotations)
annotation_red <- annotations |>
dplyr::select(`X.Scan.`, Compound_Name, SpectrumID)
rav_lib <- read_tsv("candidate_BA_with_best_annotations.tsv")
annotation_red <- annotations |>
dplyr::select(`X.Scan.`, Compound_Name, SpectrumID)
Rev_cos_red_annotation <- rav_lib |>
left_join(annotation_red, by = c("query_id" = "SpectrumID")) %>%
dplyr::filter(`X.Scan.` %in% VIPs_3xtg_spf_strain_Load$ID)
View(Rev_cos_red_annotation)
rav_lib <- read_tsv("candidate_BA_with_best_annotations.tsv")
annotation_red <- annotations |>
dplyr::select(`X.Scan.`, Compound_Name, SpectrumID)
View(annotation_red)
Rev_cos_red_annotation <- rav_lib |>
left_join(annotation_red, by = c("query_id" = "SpectrumID"))
View(Rev_cos_red_annotation)
View(VIPs_3xtg_spf_strain_Load)
