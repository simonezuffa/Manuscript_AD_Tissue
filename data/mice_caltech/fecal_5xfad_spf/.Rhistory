# Check internal standard and remove sample where there was a shift
fbmn_IS <- annotations %>% dplyr::filter(str_detect(Compound_Name, regex("sulf", ignore_case = TRUE))) %>%
distinct(X.Scan., .keep_all = TRUE) %>% dplyr::filter(Organism != "BILELIB19")
# Extract IS features for the table
table_IS <- data_fix %>% column_to_rownames("SampleID") %>% t() %>% as.data.frame() %>% rownames_to_column("ID") %>%
dplyr::filter(ID %in% fbmn_IS$X.Scan.) %>% column_to_rownames("ID") %>% t() %>% as.data.frame() %>%
rownames_to_column("SampleID") %>% dplyr::filter(!(str_detect(SampleID, "SRM|QCmix|Pool|BLANK|SRM|IS"))) %>%
dplyr::select(SampleID, `5305`) %>% left_join(metadata_metabolomics) %>%
dplyr::filter(`5305` < 3000000) %>% dplyr::filter(`5305` > 1200000) # remove samples with poor IS acquisition
sample_is_to_remove <- data_fix %>% column_to_rownames("SampleID") %>% t() %>% as.data.frame() %>% rownames_to_column("ID") %>%
dplyr::filter(ID %in% fbmn_IS$X.Scan.) %>% column_to_rownames("ID") %>% t() %>% as.data.frame() %>%
rownames_to_column("SampleID") %>% dplyr::filter(!(str_detect(SampleID, "SRM|QCmix|Pool|BLANK|SRM|IS"))) %>%
dplyr::select(SampleID, `5305`) %>% left_join(metadata_metabolomics) %>%
dplyr::filter(`5305` > 3000000 | `5305` < 1200000)
colnames(table_IS)[2] <- "Sulfadimethoxine"
table_IS %>%
ggscatter(x = "Run_Order", y = "Sulfadimethoxine", add = c("reg.line")) + ylim(0, 4e6) +
stat_cor()
table_IS %>%
ggbarplot(x = "Run_Order", y = "Sulfadimethoxine", xlab = "Run Order",
ylab = "Peak Area Sulfadimethoxine", title = "Internal Standard Acquisition") +
geom_hline(yintercept = mean(table_IS$Sulfadimethoxine, na.rm = TRUE), linetype = "dashed", color = "blue")
cv_is <- sd(table_IS$Sulfadimethoxine)/mean(table_IS$Sulfadimethoxine)
# Check features in blanks and pools
data_blank <- data_fix %>% dplyr::filter(str_detect(pattern = "BLANK", SampleID))
data_pools <- data_fix %>% dplyr::filter(str_detect(pattern = "Pool", SampleID))
data_sixmix <- data_fix %>% dplyr::filter(str_detect(pattern = "QCmix", SampleID))
data_srm <- data_fix %>% dplyr::filter(str_detect(pattern = "SRM", SampleID))
# Blanks
blanks_feature_info <- data.frame(Feature = colnames(data_blank)[-1],
Mean_blank = data_blank %>% column_to_rownames("SampleID") %>% colMeans(),
SD_blank =  data_blank %>% column_to_rownames("SampleID") %>% apply(2, sd)) %>%
dplyr::mutate(CV_blank = SD_blank/Mean_blank) %>% left_join(annotations, by = c("Feature" = "X.Scan.")) %>%
left_join(info_feature) %>% dplyr::select(Feature, mz, RT, Compound_Name, SpectrumID,
Precursor_MZ, Mean_blank, SD_blank, CV_blank) %>%
dplyr::filter(Mean_blank > 0) %>% arrange(desc(Mean_blank))
# Six mix
sixmix_feature_info <- data.frame(Feature = colnames(data_sixmix)[-1],
Mean_sixmix = data_sixmix %>% column_to_rownames("SampleID") %>% colMeans(),
SD_sixmix = data_sixmix %>% column_to_rownames("SampleID") %>% apply(2, sd)) %>%
dplyr::mutate(CV_sixmix = SD_sixmix/Mean_sixmix) %>% left_join(annotations, by = c("Feature" = "X.Scan.")) %>%
left_join(info_feature) %>% dplyr::select(Feature, mz, RT, Compound_Name, SpectrumID,
Precursor_MZ, Mean_sixmix, SD_sixmix, CV_sixmix) %>%
dplyr::filter(Mean_sixmix > 0) %>% arrange(desc(Mean_sixmix))
# Pool
pools_feature_info <- data.frame(Feature = colnames(data_pools)[-1],
Mean_pool = data_pools %>% column_to_rownames("SampleID") %>% colMeans(),
SD_pool =  data_pools %>% column_to_rownames("SampleID") %>% apply(2, sd)) %>%
dplyr::mutate(CV_pool = SD_pool/Mean_pool) %>% left_join(annotations, by = c("Feature" = "X.Scan.")) %>%
left_join(info_feature) %>% dplyr::select(Feature, mz, RT, Compound_Name, SpectrumID,
Precursor_MZ, Mean_pool, SD_pool, CV_pool) %>%
dplyr::filter(Mean_pool > 0) %>% arrange(desc(Mean_pool))
# Features to be removed Pools/Blank < 5
feature_to_remove <- blanks_feature_info %>% left_join(pools_feature_info) %>%
dplyr::filter(Mean_blank > 0) %>%
dplyr::mutate(Pool_Blank = Mean_pool/Mean_blank) %>%
dplyr::filter(Pool_Blank < 5 | is.na(Pool_Blank))
# Data with blank removal
data_clean <- data_fix %>% dplyr::select(-c(feature_to_remove$Feature)) %>%
dplyr::filter(!(SampleID %in% c("363243385", "363243387", "363141197"))) %>%
column_to_rownames("SampleID") %>%
select_if(~sum(.) != 0) %>% rownames_to_column("SampleID")
# Features to be removed Pool/QCmix < 5
feature_to_remove_mix <- sixmix_feature_info %>% left_join(pools_feature_info) %>%
dplyr::filter(Mean_sixmix > 0) %>%
dplyr::mutate(Pool_Mix = Mean_pool/Mean_sixmix) %>%
dplyr::filter(Pool_Mix < 5 | is.na(Pool_Mix)) %>%
dplyr::filter(!(Feature %in% feature_to_remove$Feature))
# Data with blank2 removal
data_clean2 <- data_clean %>% dplyr::select(-c(feature_to_remove_mix$Feature))
# Remove feature before 0.2 minutes and after 8 minutes
feature_to_remove_rt <- info_feature_complete %>% dplyr::filter(RT < 0.2 | RT > 8) %>%
dplyr::filter(!(Feature %in% feature_to_remove$Feature))  %>%
dplyr::filter(!(Feature %in% feature_to_remove_mix$Feature)) %>%
dplyr::filter(Feature != "14823")
# Final cleaned table
data_clean3 <- data_clean2 %>% dplyr::select(-c(feature_to_remove_rt$Feature)) %>%
dplyr::filter(!(SampleID %in% sample_is_to_remove$SampleID))
# PCA raw data
PCA_raw <- mixOmics::pca(data_clean3 %>% select_at(vars(-one_of(nearZeroVar(., names = TRUE)))) %>%
column_to_rownames("SampleID"), ncomp = 2, center = TRUE, scale = TRUE)
PCA_raw_scores <- data.frame(PCA_raw$variates$X) %>% rownames_to_column("SampleID") %>%
left_join(metadata_metabolomics)
i <- "intervention"
PCA_raw_plot <- PCA_raw_scores %>%
ggscatter(x = "PC1", y = "PC2", color = i, alpha = 0.6,
title = paste("PCA - Fecal", i, sep = " "),
xlab = paste("PC1 (", round(PCA_raw$prop_expl_var$X[1]*100, digits = 1),"%)", sep = ""),
ylab = paste("PC2 (", round(PCA_raw$prop_expl_var$X[2]*100, digits = 1),"%)", sep = ""),
ggtheme = theme_classic()) +
geom_point(data = PCA_raw_scores %>% group_by((!!sym(i))) %>%
summarise_at(vars(matches("PC")), mean), aes(PC1, PC2, color = (!!sym(i))), size = 4, shape = 8) +
theme(plot.title = element_text(size = 10), axis.title = element_text(size = 8),
axis.text = element_text(size = 4)) + coord_fixed()
# Keep only samples
data_sample <- data_clean3 %>%
dplyr::filter(!(str_detect(pattern = "mix|BLANK|SRM|IS_|Pool", SampleID)))
# PCA raw data
PCA_raw <- mixOmics::pca(data_sample %>% select_at(vars(-one_of(nearZeroVar(., names = TRUE)))) %>%
column_to_rownames("SampleID"), ncomp = 2, center = TRUE, scale = TRUE)
PCA_raw_scores <- data.frame(PCA_raw$variates$X) %>% rownames_to_column("SampleID") %>%
left_join(metadata_metabolomics)
i <- "intervention"
PCA_raw_plot <- PCA_raw_scores %>%
ggscatter(x = "PC1", y = "PC2", color = i, alpha = 0.6,
title = paste("PCA - Fecal", i, sep = " "),
xlab = paste("PC1 (", round(PCA_raw$prop_expl_var$X[1]*100, digits = 1),"%)", sep = ""),
ylab = paste("PC2 (", round(PCA_raw$prop_expl_var$X[2]*100, digits = 1),"%)", sep = ""),
ggtheme = theme_classic()) +
geom_point(data = PCA_raw_scores %>% group_by((!!sym(i))) %>%
summarise_at(vars(matches("PC")), mean), aes(PC1, PC2, color = (!!sym(i))), size = 4, shape = 8) +
theme(plot.title = element_text(size = 10), axis.title = element_text(size = 8),
axis.text = element_text(size = 4)) + coord_fixed()
# RCLR transformation
data_sample_clr <- decostand(data_sample %>% column_to_rownames("SampleID"), method = "rclr")
# PCA
PCA_whole <- mixOmics::pca(data_sample_clr %>% select_at(vars(-one_of(nearZeroVar(., names = TRUE)))),
ncomp = 2, center = TRUE, scale = TRUE)
PCA_whole_scores <- data.frame(PCA_whole$variates$X) %>%
rownames_to_column("SampleID") %>% left_join(metadata_metabolomics)
i <- "intervention"
PCA_plot <- PCA_whole_scores %>%
ggscatter(x = "PC1", y = "PC2", color = i, alpha = 0.6,
title = "Fecal - SPF 5xFAD", palette = c("#B7E6A5", "#007188"),
xlab = paste("PC1 (", round(PCA_whole$prop_expl_var$X[1]*100, digits = 1),"%)", sep = ""),
ylab = paste("PC2 (", round(PCA_whole$prop_expl_var$X[2]*100, digits = 1),"%)", sep = ""),
ggtheme = theme_classic(), legend = "None") +
geom_point(data = PCA_whole_scores %>% group_by((!!sym(i))) %>%
summarise_at(vars(matches("PC")), mean), aes(PC1, PC2, color = (!!sym(i))), size = 4, shape = 8) +
theme(plot.title = element_text(size = 10), axis.title = element_text(size = 6),
axis.text = element_text(size = 8))
# PERMANOVA
dist_metabolites <- vegdist(data_sample_clr, method = "euclidean")
disper_intervention <- betadisper(dist_metabolites, PCA_whole_scores$intervention)
anova(disper_intervention)
permanova <- adonis2(dist_metabolites ~ intervention, PCA_whole_scores, na.action = na.omit)
# Check sacrifice and longitudinal data separately
sample_sac <- metadata_metabolomics %>% dplyr::filter(intervention == "Sacrifice")
sample_long <- metadata_metabolomics %>% dplyr::filter(intervention != "Sacrifice")
sample_wt <- metadata_metabolomics %>% dplyr::filter(mouse_strain == "WT 5XFAD")
sample_mut <- metadata_metabolomics %>% dplyr::filter(mouse_strain == "Het 5XFAD")
sample_male <- metadata_metabolomics %>% dplyr::filter(sex == "male")
sample_female <- metadata_metabolomics %>% dplyr::filter(sex == "female")
##################
# SACRIFICE DATA #
##################
data_sacrifice <- data_sample %>%
dplyr::filter(SampleID %in% sample_sac$SampleID)
# RCLR transformation
data_sacrifice_clr <- decostand(data_sacrifice %>% column_to_rownames("SampleID"), method = "rclr")
# PCA
PCA_whole <- mixOmics::pca(data_sacrifice_clr %>% select_at(vars(-one_of(nearZeroVar(., names = TRUE)))),
ncomp = 2, center = TRUE, scale = TRUE)
PCA_whole_scores <- data.frame(PCA_whole$variates$X) %>% rownames_to_column("SampleID") %>%
left_join(metadata_metabolomics)
PCA_sac_plots <- list()
for (i in c("cohort", "host_age", "mouse_strain", "sex", "strain_sex", "Plate")) {
PCA_plot <- PCA_whole_scores %>%
ggscatter(x = "PC1", y = "PC2", color = i, alpha = 0.6,
title = "PCA - Sacrifice",
xlab = paste("PC1 (", round(PCA_whole$prop_expl_var$X[1]*100, digits = 1),"%)", sep = ""),
ylab = paste("PC2 (", round(PCA_whole$prop_expl_var$X[2]*100, digits = 1),"%)", sep = ""),
ggtheme = theme_classic()) +
geom_point(data = PCA_whole_scores %>% group_by((!!sym(i))) %>%
summarise_at(vars(matches("PC")), mean), aes(PC1, PC2, color = (!!sym(i))), size = 4, shape = 8) +
theme(plot.title = element_text(size = 10), axis.title = element_text(size = 8),
axis.text = element_text(size = 4)) + coord_fixed()
PCA_sac_plots[[i]] <- PCA_plot
}
PCA_sac_plots_final <- wrap_plots(PCA_sac_plots, nrow = 3)
i <- "mouse_strain"
PCA_plot <- PCA_whole_scores %>%
ggscatter(x = "PC1", y = "PC2", color = i, alpha = 0.6,
title = "Fecal GF - Sacrifice", palette = c("#009392", "#F0746E"),
xlab = paste("PC1 (", round(PCA_whole$prop_expl_var$X[1]*100, digits = 1),"%)", sep = ""),
ylab = paste("PC2 (", round(PCA_whole$prop_expl_var$X[2]*100, digits = 1),"%)", sep = ""),
ggtheme = theme_classic(), legend = "None") +
geom_point(data = PCA_whole_scores %>% group_by((!!sym(i))) %>%
summarise_at(vars(matches("PC")), mean), aes(PC1, PC2, color = (!!sym(i))), size = 4, shape = 8) +
theme(plot.title = element_text(size = 10), axis.title = element_text(size = 6),
axis.text = element_text(size = 8))
# PERMANOVA
dist_metabolites <- vegdist(data_sacrifice_clr, method = "euclidean")
disper_genotype <- betadisper(dist_metabolites, PCA_whole_scores$mouse_strain)
anova(disper_genotype)
permanova <- adonis2(dist_metabolites ~ mouse_strain * sex * host_age +
cohort + Plate, PCA_whole_scores, na.action = na.omit)
# PLSDA 5xFAD - Strain
PLSDA_strain <- mixOmics::plsda(data_sacrifice_clr %>% select_at(vars(-one_of(nearZeroVar(., names = TRUE)))),
PCA_whole_scores$mouse_strain, ncomp = 3, scale = TRUE)
PLSDA_strain_scores <- data.frame(PLSDA_strain$variates$X) %>%
rownames_to_column("SampleID") %>% left_join(metadata_metabolomics)
PLSDA_strain_plot <- PLSDA_strain_scores %>%
ggscatter(x = "comp1", y = "comp2", color = "mouse_strain", alpha = 0.6, title = "PLSDA - Fecal 5xFAD SPF - Strain",
xlab = paste("Component 1 (", round(PLSDA_strain$prop_expl_var$X[1]*100, digits = 1),"%)", sep = ""),
ylab = paste("Component 2 (", round(PLSDA_strain$prop_expl_var$X[2]*100, digits = 1),"%)", sep = ""),
legend.title = "Group", ggtheme = theme_classic()) +
geom_point(data = PLSDA_strain_scores %>% group_by(mouse_strain) %>%
summarise_at(vars(matches("comp")), mean), aes(comp1, comp2, color = mouse_strain), size = 3, shape = 8) +
theme(plot.title = element_text(size = 10),axis.title = element_text(size = 8),
axis.text = element_text(size = 5)) + coord_fixed()
Loadings_strain <- plotLoadings(PLSDA_strain, plot = FALSE, contrib = "max") %>%
rownames_to_column() %>% dplyr::select(rowname, GroupContrib)
VIPs_strain <- as.data.frame(mixOmics::vip(PLSDA_strain))
VIPs_strain_filter <- dplyr::filter(VIPs_strain, VIPs_strain$comp1 > 1)
VIPs_strain_filter$ID <- rownames(VIPs_strain_filter)
VIPs_strain_select <- VIPs_strain_filter %>% dplyr::select(ID, comp1)
VIPs_strain_Load <- VIPs_strain_select %>%
left_join(Loadings_strain, by = c("ID" = "rowname")) %>%
left_join(info_feature_complete, by = c("ID" = "Feature")) %>% arrange(desc(comp1))
# PLSDA 5xFAD - Sex
PLSDA_sex <- mixOmics::plsda(data_sacrifice_clr %>% select_at(vars(-one_of(nearZeroVar(., names = TRUE)))),
PCA_whole_scores$sex, ncomp = 3, scale = TRUE)
PLSDA_sex_scores <- data.frame(PLSDA_sex$variates$X) %>%
rownames_to_column("SampleID") %>% left_join(metadata_metabolomics)
PLSDA_sex_plot <- PLSDA_sex_scores %>%
ggscatter(x = "comp1", y = "comp2", color = "sex", alpha = 0.6, title = "PLSDA - Fecal 5xFAD SPF - Sex",
xlab = paste("Component 1 (", round(PLSDA_sex$prop_expl_var$X[1]*100, digits = 1),"%)", sep = ""),
ylab = paste("Component 2 (", round(PLSDA_sex$prop_expl_var$X[2]*100, digits = 1),"%)", sep = ""),
legend.title = "Group", ggtheme = theme_classic()) +
geom_point(data = PLSDA_sex_scores %>% group_by(sex) %>%
summarise_at(vars(matches("comp")), mean), aes(comp1, comp2, color = sex), size = 3, shape = 8) +
theme(plot.title = element_text(size = 10),axis.title = element_text(size = 8),
axis.text = element_text(size = 5)) + coord_fixed()
Loadings_sex <- plotLoadings(PLSDA_sex, plot = FALSE, contrib = "max") %>%
rownames_to_column() %>% dplyr::select(rowname, GroupContrib)
VIPs_sex <- as.data.frame(mixOmics::vip(PLSDA_sex))
VIPs_sex_filter <- dplyr::filter(VIPs_sex, VIPs_sex$comp1 > 1)
VIPs_sex_filter$ID <- rownames(VIPs_sex_filter)
VIPs_sex_select <- VIPs_sex_filter %>% dplyr::select(ID, comp1)
VIPs_sex_Load <- VIPs_sex_select %>%
left_join(Loadings_sex, by = c("ID" = "rowname")) %>%
left_join(info_feature_complete, by = c("ID" = "Feature")) %>% arrange(desc(comp1))
# Remove feature influenced by sex
VIPs_strain_5xfad_no_sex <- VIPs_strain_Load %>%
anti_join(VIPs_sex_Load %>% dplyr::select(ID))
# Stratify by genotype and sex and look at differences if
data_sac_het <- data_sacrifice %>%
dplyr::filter(SampleID %in% sample_mut$SampleID)
data_sac_wt <- data_sacrifice %>%
dplyr::filter(SampleID %in% sample_wt$SampleID)
data_sac_male <- data_sacrifice %>%
dplyr::filter(SampleID %in% sample_male$SampleID)
data_sac_female <- data_sacrifice %>%
dplyr::filter(SampleID %in% sample_female$SampleID)
# RCLR transformation
data_sac_het_clr <- decostand(data_sac_het %>% column_to_rownames("SampleID"), method = "rclr")
data_sac_wt_clr <- decostand(data_sac_wt %>% column_to_rownames("SampleID"), method = "rclr")
data_sac_male_clr <- decostand(data_sac_male %>% column_to_rownames("SampleID"), method = "rclr")
data_sac_female_clr <- decostand(data_sac_female %>% column_to_rownames("SampleID"), method = "rclr")
# PCA
PCA_sac_het <- mixOmics::pca(data_sac_het_clr %>% select_at(vars(-one_of(nearZeroVar(., names = TRUE)))),
ncomp = 2, center = TRUE, scale = TRUE)
PCA_sac_wt <- mixOmics::pca(data_sac_wt_clr %>% select_at(vars(-one_of(nearZeroVar(., names = TRUE)))),
ncomp = 2, center = TRUE, scale = TRUE)
PCA_sac_male <- mixOmics::pca(data_sac_male_clr %>% select_at(vars(-one_of(nearZeroVar(., names = TRUE)))),
ncomp = 2, center = TRUE, scale = TRUE)
PCA_sac_female <- mixOmics::pca(data_sac_female_clr %>% select_at(vars(-one_of(nearZeroVar(., names = TRUE)))),
ncomp = 2, center = TRUE, scale = TRUE)
PCA_sac_het_scores <- data.frame(PCA_sac_het$variates$X) %>%
rownames_to_column("SampleID") %>%
left_join(metadata_metabolomics)
PCA_sac_wt_scores <- data.frame(PCA_sac_wt$variates$X) %>%
rownames_to_column("SampleID") %>%
left_join(metadata_metabolomics)
PCA_sac_male_scores <- data.frame(PCA_sac_male$variates$X) %>%
rownames_to_column("SampleID") %>%
left_join(metadata_metabolomics)
PCA_sac_female_scores <- data.frame(PCA_sac_female$variates$X) %>%
rownames_to_column("SampleID") %>%
left_join(metadata_metabolomics)
PCA_sac_het_plot <- PCA_sac_het_scores %>%
ggscatter(x = "PC1", y = "PC2", color = "sex", alpha = 0.6,
title = "PCA - Het Sacrifice",
xlab = paste("PC1 (", round(PCA_sac_het$prop_expl_var$X[1]*100, digits = 1),"%)", sep = ""),
ylab = paste("PC2 (", round(PCA_sac_het$prop_expl_var$X[2]*100, digits = 1),"%)", sep = ""),
ggtheme = theme_classic()) +
geom_point(data = PCA_sac_het_scores %>% group_by(sex) %>% summarise(PC1 = mean(PC1), PC2 = mean(PC2)),
aes(x = PC1, y = PC2, color = sex), size = 4, shape = 8) +
theme(plot.title = element_text(size = 10),
axis.title = element_text(size = 8),
axis.text = element_text(size = 4)) +
coord_fixed()
PCA_sac_wt_plot <- PCA_sac_wt_scores %>%
ggscatter(x = "PC1", y = "PC2", color = "sex", alpha = 0.6,
title = "PCA - WT Sacrifice",
xlab = paste("PC1 (", round(PCA_sac_wt$prop_expl_var$X[1]*100, digits = 1),"%)", sep = ""),
ylab = paste("PC2 (", round(PCA_sac_wt$prop_expl_var$X[2]*100, digits = 1),"%)", sep = ""),
ggtheme = theme_classic()) +
geom_point(data = PCA_sac_wt_scores %>% group_by(sex) %>% summarise(PC1 = mean(PC1), PC2 = mean(PC2)),
aes(x = PC1, y = PC2, color = sex), size = 4, shape = 8) +
theme(plot.title = element_text(size = 10),
axis.title = element_text(size = 8),
axis.text = element_text(size = 4)) +
coord_fixed()
PCA_sac_male_plot <- PCA_sac_male_scores %>%
ggscatter(x = "PC1", y = "PC2", color = "mouse_strain", alpha = 0.6,
title = "PCA - Male Sacrifice",
xlab = paste("PC1 (", round(PCA_sac_male$prop_expl_var$X[1]*100, digits = 1),"%)", sep = ""),
ylab = paste("PC2 (", round(PCA_sac_male$prop_expl_var$X[2]*100, digits = 1),"%)", sep = ""),
ggtheme = theme_classic()) +
geom_point(data = PCA_sac_male_scores %>% group_by(mouse_strain) %>% summarise(PC1 = mean(PC1), PC2 = mean(PC2)),
aes(x = PC1, y = PC2, color = mouse_strain), size = 4, shape = 8) +
theme(plot.title = element_text(size = 10),
axis.title = element_text(size = 8),
axis.text = element_text(size = 4)) +
coord_fixed()
PCA_sac_female_plot <- PCA_sac_female_scores %>%
ggscatter(x = "PC1", y = "PC2", color = "mouse_strain", alpha = 0.6,
title = "PCA - Female Sacrifice",
xlab = paste("PC1 (", round(PCA_sac_female$prop_expl_var$X[1]*100, digits = 1),"%)", sep = ""),
ylab = paste("PC2 (", round(PCA_sac_female$prop_expl_var$X[2]*100, digits = 1),"%)", sep = ""),
ggtheme = theme_classic()) +
geom_point(data = PCA_sac_female_scores %>% group_by(mouse_strain) %>% summarise(PC1 = mean(PC1), PC2 = mean(PC2)),
aes(x = PC1, y = PC2, color = mouse_strain), size = 4, shape = 8) +
theme(plot.title = element_text(size = 10),
axis.title = element_text(size = 8),
axis.text = element_text(size = 4)) +
coord_fixed()
PCA_sac_subplots <- wrap_plots(PCA_sac_het_plot, PCA_sac_wt_plot, PCA_sac_male_plot, PCA_sac_female_plot, nrow = 2)
# PLSDA
PLSDA_sac_het <- mixOmics::plsda(data_sac_het_clr %>% select_at(vars(-one_of(nearZeroVar(., names = TRUE)))),
PCA_sac_het_scores$sex, ncomp = 2, scale = TRUE)
PLSDA_sac_wt <- mixOmics::plsda(data_sac_wt_clr %>% select_at(vars(-one_of(nearZeroVar(., names = TRUE)))),
PCA_sac_wt_scores$sex, ncomp = 3, scale = TRUE)
PLSDA_sac_male <- mixOmics::plsda(data_sac_male_clr %>% select_at(vars(-one_of(nearZeroVar(., names = TRUE)))),
PCA_sac_male_scores$mouse_strain, ncomp = 3, scale = TRUE)
PLSDA_sac_female <- mixOmics::plsda(data_sac_female_clr %>% select_at(vars(-one_of(nearZeroVar(., names = TRUE)))),
PCA_sac_female_scores$mouse_strain, ncomp = 2, scale = TRUE)
PLSDA_sac_het_scores <- data.frame(PLSDA_sac_het$variates$X) %>%
rownames_to_column("SampleID") %>% left_join(metadata_metabolomics)
PLSDA_sac_wt_scores <- data.frame(PLSDA_sac_wt$variates$X) %>%
rownames_to_column("SampleID") %>% left_join(metadata_metabolomics)
PLSDA_sac_male_scores <- data.frame(PLSDA_sac_male$variates$X) %>%
rownames_to_column("SampleID") %>% left_join(metadata_metabolomics)
PLSDA_sac_female_scores <- data.frame(PLSDA_sac_female$variates$X) %>%
rownames_to_column("SampleID") %>% left_join(metadata_metabolomics)
PLSDA_sac_het_plot <- PLSDA_sac_het_scores %>%
ggscatter(x = "comp1", y = "comp2", color = "sex", alpha = 0.6, title = "PLSDA - Het Sacrifice Sex",
xlab = paste("Component 1 (", round(PLSDA_sac_het$prop_expl_var$X[1]*100, digits = 1),"%)", sep = ""),
ylab = paste("Component 2 (", round(PLSDA_sac_het$prop_expl_var$X[2]*100, digits = 1),"%)", sep = ""),
legend.title = "Group", ggtheme = theme_classic()) +
geom_point(data = PLSDA_sac_het_scores %>% group_by(sex) %>%
summarise_at(vars(matches("comp")), mean), aes(comp1, comp2, color = sex), size = 3, shape = 8) +
theme(plot.title = element_text(size = 10),axis.title = element_text(size = 8),
axis.text = element_text(size = 5)) + coord_fixed()
Loadings_sac_het <- plotLoadings(PLSDA_sac_het, plot = FALSE, contrib = "max") %>%
rownames_to_column() %>% dplyr::select(rowname, GroupContrib)
PLSDA_sac_wt_plot <- PLSDA_sac_wt_scores %>%
ggscatter(x = "comp1", y = "comp2", color = "sex", alpha = 0.6, title = "PLSDA - WT Sacrifice Sex",
xlab = paste("Component 1 (", round(PLSDA_sac_wt$prop_expl_var$X[1]*100, digits = 1),"%)", sep = ""),
ylab = paste("Component 2 (", round(PLSDA_sac_wt$prop_expl_var$X[2]*100, digits = 1),"%)", sep = ""),
legend.title = "Group", ggtheme = theme_classic()) +
geom_point(data = PLSDA_sac_wt_scores %>% group_by(sex) %>%
summarise_at(vars(matches("comp")), mean), aes(comp1, comp2, color = sex), size = 3, shape = 8) +
theme(plot.title = element_text(size = 10),axis.title = element_text(size = 8),
axis.text = element_text(size = 5)) + coord_fixed()
Loadings_sac_wt <- plotLoadings(PLSDA_sac_wt, plot = FALSE, contrib = "max") %>%
rownames_to_column() %>% dplyr::select(rowname, GroupContrib)
PLSDA_sac_male_plot <- PLSDA_sac_male_scores %>%
ggscatter(x = "comp1", y = "comp2", color = "mouse_strain", alpha = 0.6, title = "PLSDA - Sacrifice Male Genotype",
xlab = paste("Component 1 (", round(PLSDA_sac_male$prop_expl_var$X[1]*100, digits = 1),"%)", sep = ""),
ylab = paste("Component 2 (", round(PLSDA_sac_male$prop_expl_var$X[2]*100, digits = 1),"%)", sep = ""),
legend.title = "Group", ggtheme = theme_classic()) +
geom_point(data = PLSDA_sac_male_scores %>% group_by(mouse_strain) %>%
summarise_at(vars(matches("comp")), mean), aes(comp1, comp2, color = mouse_strain), size = 3, shape = 8) +
theme(plot.title = element_text(size = 10),axis.title = element_text(size = 8),
axis.text = element_text(size = 5)) + coord_fixed()
Loadings_sac_male <- plotLoadings(PLSDA_sac_male, plot = FALSE, contrib = "max") %>%
rownames_to_column() %>% dplyr::select(rowname, GroupContrib)
PLSDA_sac_female_plot <- PLSDA_sac_female_scores %>%
ggscatter(x = "comp1", y = "comp2", color = "mouse_strain", alpha = 0.6, title = "PLSDA - Sacrifice Female Genotype",
xlab = paste("Component 1 (", round(PLSDA_sac_female$prop_expl_var$X[1]*100, digits = 1),"%)", sep = ""),
ylab = paste("Component 2 (", round(PLSDA_sac_female$prop_expl_var$X[2]*100, digits = 1),"%)", sep = ""),
legend.title = "Group", ggtheme = theme_classic()) +
geom_point(data = PLSDA_sac_female_scores %>% group_by(mouse_strain) %>%
summarise_at(vars(matches("comp")), mean), aes(comp1, comp2, color = mouse_strain), size = 3, shape = 8) +
theme(plot.title = element_text(size = 10),axis.title = element_text(size = 8),
axis.text = element_text(size = 5)) + coord_fixed()
Loadings_sac_female <- plotLoadings(PLSDA_sac_female, plot = FALSE, contrib = "max") %>%
rownames_to_column() %>% dplyr::select(rowname, GroupContrib)
VIPs_sac_het <- as.data.frame(mixOmics::vip(PLSDA_sac_het))
VIPs_sac_het_filter <- dplyr::filter(VIPs_sac_het, VIPs_sac_het$comp1 > 1)
VIPs_sac_het_filter$ID <- rownames(VIPs_sac_het_filter)
VIPs_sac_het_select <- VIPs_sac_het_filter %>% dplyr::select(ID, comp1)
VIPs_sac_het_Load <- VIPs_sac_het_select %>%
left_join(Loadings_sac_het, by = c("ID" = "rowname")) %>%
left_join(info_feature_complete, by = c("ID" = "Feature")) %>% arrange(desc(comp1))
VIPs_sac_wt <- as.data.frame(mixOmics::vip(PLSDA_sac_wt))
VIPs_sac_wt_filter <- dplyr::filter(VIPs_sac_wt, VIPs_sac_wt$comp1 > 1)
VIPs_sac_wt_filter$ID <- rownames(VIPs_sac_wt_filter)
VIPs_sac_wt_select <- VIPs_sac_wt_filter %>% dplyr::select(ID, comp1)
VIPs_sac_wt_Load <- VIPs_sac_wt_select %>%
left_join(Loadings_sac_wt, by = c("ID" = "rowname")) %>%
left_join(info_feature_complete, by = c("ID" = "Feature")) %>% arrange(desc(comp1))
VIPs_sac_male <- as.data.frame(mixOmics::vip(PLSDA_sac_male))
VIPs_sac_male_filter <- dplyr::filter(VIPs_sac_male, VIPs_sac_male$comp1 > 1)
VIPs_sac_male_filter$ID <- rownames(VIPs_sac_male_filter)
VIPs_sac_male_select <- VIPs_sac_male_filter %>% dplyr::select(ID, comp1)
VIPs_sac_male_Load <- VIPs_sac_male_select %>%
left_join(Loadings_sac_male, by = c("ID" = "rowname")) %>%
left_join(info_feature_complete, by = c("ID" = "Feature")) %>% arrange(desc(comp1))
VIPs_sac_female <- as.data.frame(mixOmics::vip(PLSDA_sac_female))
VIPs_sac_female_filter <- dplyr::filter(VIPs_sac_female, VIPs_sac_female$comp1 > 1)
VIPs_sac_female_filter$ID <- rownames(VIPs_sac_female_filter)
VIPs_sac_female_select <- VIPs_sac_female_filter %>% dplyr::select(ID, comp1)
VIPs_sac_female_Load <- VIPs_sac_female_select %>%
left_join(Loadings_sac_female, by = c("ID" = "rowname")) %>%
left_join(info_feature_complete, by = c("ID" = "Feature")) %>% arrange(desc(comp1))
# Sample matching
list_5xfad_genotype <- list(
`Male 5xFAD` = (VIPs_sac_male_Load %>% dplyr::filter(GroupContrib == "Het 5XFAD"))$ID,
`Male WT` =  (VIPs_sac_male_Load %>% dplyr::filter(GroupContrib == "WT 5XFAD"))$ID,
`Female 5xFAD` = (VIPs_sac_female_Load %>% dplyr::filter(GroupContrib == "Het 5XFAD"))$ID,
`Female WT` = (VIPs_sac_female_Load %>% dplyr::filter(GroupContrib == "WT 5XFAD"))$ID)
genotype_5xfad <- UpSetR::upset(fromList(list_5xfad_genotype), nsets = 4, nintersects = 7,
point.size = 1.5, line.size = 1, text.scale = 1, keep.order = TRUE,
sets = c("Male 5xFAD", "Male WT", "Female 5xFAD", "Female WT"),
queries = list(list(query = intersects, params = list("Female 5xFAD",
"Male 5xFAD"), color = "steelblue1", active = T),
list(query = intersects, params = list("Female WT",
"Male WT"),color = "orange", active = T)))
list_5xfad_sex <- list(
`5xFAD Male` = (VIPs_sac_het_Load %>% dplyr::filter(GroupContrib == "male"))$ID,
`5xFAD Female` =  (VIPs_sac_het_Load %>% dplyr::filter(GroupContrib == "female"))$ID,
`WT Male` = (VIPs_sac_wt_Load %>% dplyr::filter(GroupContrib == "male"))$ID,
`WT Female` = (VIPs_sac_wt_Load %>% dplyr::filter(GroupContrib == "female"))$ID)
sex_5xfad <- UpSetR::upset(fromList(list_5xfad_sex), nsets = 4, nintersects = 6,
point.size = 1.5, line.size = 1, text.scale = 1, keep.order = TRUE,
sets = c("5xFAD Male", "5xFAD Female", "WT Male", "WT Female"),
queries = list(list(query = intersects, params = list("WT Male",
"5xFAD Male"), color = "steelblue1", active = T),
list(query = intersects, params = list("5xFAD Female",
"WT Female"),color = "orange", active = T)))
list_5xfad_combined <- list(
`Male 5xFAD` = (VIPs_sac_male_Load %>% dplyr::filter(GroupContrib == "Het 5XFAD"))$ID,
`Male WT` =  (VIPs_sac_male_Load %>% dplyr::filter(GroupContrib == "WT 5XFAD"))$ID,
`Female 5xFAD` = (VIPs_sac_female_Load %>% dplyr::filter(GroupContrib == "Het 5XFAD"))$ID,
`Female WT` = (VIPs_sac_female_Load %>% dplyr::filter(GroupContrib == "WT 5XFAD"))$ID,
`5xFAD Male` = (VIPs_sac_het_Load %>% dplyr::filter(GroupContrib == "male"))$ID,
`5xFAD Female` =  (VIPs_sac_het_Load %>% dplyr::filter(GroupContrib == "female"))$ID,
`WT Male` = (VIPs_sac_wt_Load %>% dplyr::filter(GroupContrib == "male"))$ID,
`WT Female` = (VIPs_sac_wt_Load %>% dplyr::filter(GroupContrib == "female"))$ID)
combined_5xfad <- UpSetR::upset(fromList(list_5xfad_combined), nsets = 8, nintersects = NA,
point.size = 1.5, line.size = 1, text.scale = 1, keep.order = TRUE,
sets = c("5xFAD Male", "5xFAD Female", "WT Male", "WT Female", "Male 5xFAD", "Male WT", "Female 5xFAD", "Female WT"),
queries = list(list(query = intersects, params = list("WT Male",
"5xFAD Male"), color = "orange", active = T),
list(query = intersects, params = list("5xFAD Female",
"WT Female"),color = "orange", active = T),
list(query = intersects, params = list("Female 5xFAD",
"Male 5xFAD"), color = "steelblue1", active = T),
list(query = intersects, params = list("Female WT",
"Male WT"),color = "steelblue1", active = T)))
# Check features of interest
vip_5xfad_spf_wt <- VIPs_strain_Load %>% dplyr::filter(GroupContrib == "WT 5XFAD")
vip_5xfad_spf_mut <- VIPs_strain_Load %>% dplyr::filter(GroupContrib == "Het 5XFAD")
data_5xfad_vip_spf <- data_sacrifice %>%
dplyr::select("SampleID", VIPs_strain_Load$ID) %>%
dplyr::mutate(WT = rowSums(select(., vip_5xfad_spf_wt$ID))) %>%
dplyr::mutate(Mut = rowSums(select(., vip_5xfad_spf_mut$ID))) %>%
dplyr::mutate(Ratio = log(WT/Mut)) %>%
left_join(metadata_metabolomics)
plot_ratio_feces_5xfad <- data_5xfad_vip_spf %>%
dplyr::mutate(mouse_strain = factor(mouse_strain, levels = c("WT 5XFAD", "Het 5XFAD"))) %>%
ggboxplot(y = "Ratio", x = "mouse_strain", add = "jitter", ylab = "Ln(WT/Mut)",
add.params = list(color = "mouse_strain", alpha = 0.6), legend = "none",
palette = c("#E69A8DFF", "#5F4B8BFF"), xlab = "Feces",
title = "Differential features from PLS-DA models") +
stat_compare_means() +
theme(plot.title = element_text(size = 8),axis.title = element_text(size = 7),
axis.text = element_text(size = 6))
# Cliff's Delta
cliff.delta((data_5xfad_vip_spf %>%
dplyr::filter(mouse_strain == "WT 5XFAD"))$Ratio,
(data_5xfad_vip_spf %>%
dplyr::filter(mouse_strain == "Het 5XFAD"))$Ratio)
# Extract features of interest for MN
fecal_spf_5xfad_interest <- VIPs_strain_Load %>%
dplyr::select(ID, comp1, GroupContrib) %>%
left_join(VIPs_sac_male_Load %>%
dplyr::select(ID, comp1, GroupContrib), by = c("ID" = "ID")) %>%
left_join(VIPs_sac_female_Load %>%
dplyr::select(ID, comp1, GroupContrib), by = c("ID" = "ID")) %>%
dplyr::mutate(VIP_mean = rowMeans(dplyr::select(., comp1.x, comp1.y, comp1), na.rm = TRUE))
colnames(fecal_spf_5xfad_interest) <- c("ID", "VIP1", "All_genotype", "VIP2", "Male_genotype",
"VIP3", "Female_genotype", "VIP_mean")
fecal_spf_5xfad_interest <- fecal_spf_5xfad_interest %>%
dplyr::mutate(Genotype = case_when(Male_genotype == Female_genotype ~ "Yes",
TRUE ~ "No")) %>%
left_join(info_feature_complete, by = c("ID" = "Feature"))
##########
# Export table for Joint-RPCA
##########
data_fecal_join <- data_sacrifice %>%
dplyr::left_join(metadata_metabolomics %>% dplyr::select(SampleID, anonymized_name)) %>%
dplyr::relocate(anonymized_name, .after=SampleID) %>%
dplyr::mutate(anonymized_name = gsub("\\.[^.]*$", "", anonymized_name)) %>% dplyr::select(-SampleID)
write_csv(x = data_fecal_join, file = "fecal_spf_sac_5xfad_metabolomics_join.csv")
# Check out metabolites that are separating male and female in the different genotypes
colnames(VIPs_sac_wt_Load) <- paste("WT", colnames(VIPs_sac_wt_Load), sep = "_")
shared_sex <- VIPs_sac_het_Load %>% inner_join(VIPs_sac_wt_Load, by = c("ID" = "WT_ID")) %>%
dplyr::mutate(Concordance = case_when(GroupContrib == WT_GroupContrib ~ "Yes", TRUE ~ "No")) %>%
dplyr::select(ID, mz, RT, Compound_Name, GroupContrib, Concordance, comp1, WT_comp1) %>%
dplyr::mutate(VIP =  rowMeans(cbind(comp1, WT_comp1)))
colnames(VIPs_sac_female_Load) <- paste("female", colnames(VIPs_sac_female_Load), sep = "_")
shared_genotype <- VIPs_sac_male_Load %>% inner_join(VIPs_sac_female_Load, by = c("ID" = "female_ID")) %>%
dplyr::mutate(Concordance = case_when(GroupContrib == female_GroupContrib ~ "Yes", TRUE ~ "No")) %>%
dplyr::select(ID, mz, RT, Compound_Name, GroupContrib, Concordance, comp1, female_comp1) %>%
dplyr::mutate(VIP =  rowMeans(cbind(comp1, female_comp1)))
exclusive_het_sex <- VIPs_sac_het_Load %>% anti_join(VIPs_sac_wt_Load, by = c("ID" = "WT_ID")) %>%
dplyr::mutate(GroupContrib = paste("het", GroupContrib, sep = "_"))
