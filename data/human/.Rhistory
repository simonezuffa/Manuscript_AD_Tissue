# Check NACCUDSD and NACCALZD
adrc_final %>%
dplyr::filter(LogMol > 7.1) %>%
dplyr::filter(NACCUDSD %in% c(1,2,3,4)) %>%
group_by(NACCUDSD, NACCALZD) %>%
summarise(count = n())
# NACCALZD - MCI AD + Dementia AD
adrc_alz_plot <- adrc_final %>%
dplyr::filter(LogMol > 7.1) %>%
dplyr::mutate(ALZD_cat = case_when(NACCUDSD == 1 & NACCALZD == 8 ~ "Unimpaired",
(NACCUDSD == 3 & NACCALZD == 1) | (NACCUDSD == 4 & NACCALZD == 1) ~ "AD",
TRUE ~ "Other")) %>%
dplyr::filter(ALZD_cat != "Other") %>%
ggboxplot(x = "ALZD_cat", y = "LogMol", add = "jitter",
add.params = list(color = "ALZD_cat", alpha = 0.3),
palette = c("#1b4965", "#62b6cb"), legend = "none",
ylab = "Log(Peak Area)", title = "Presumptive AD",
xlab = "Presumptive AD") +
theme(plot.title = element_text(size = 8), axis.title = element_text(size = 7),
axis.text = element_text(size = 6)) + stat_compare_means()
model <- adrc_final %>%
dplyr::filter(LogMol > 7.1) %>%
dplyr::mutate(ALZD_cat = case_when(NACCUDSD == 1 & NACCALZD == 8 ~ "Unimpaired",
(NACCUDSD == 3 & NACCALZD == 1) | (NACCUDSD == 4 & NACCALZD == 1) ~ "AD",
TRUE ~ "Other")) %>%
dplyr::filter(ALZD_cat != "Other") %>%
dplyr::mutate(ALZD_cat = factor(ALZD_cat)) %>%
glm(formula = ALZD_cat ~ LogMol + NACCAGE + NACCBMI + SEX, family = "binomial")
summary(model)
model <- adrc_final %>%
dplyr::filter(LogMol > 7.1) %>%
dplyr::filter(NACCBMI > 0 & NACCBMI < 100) %>%
dplyr::mutate(ALZD_cat = case_when(NACCUDSD == 1 & NACCALZD == 8 ~ "Unimpaired",
(NACCUDSD == 3 & NACCALZD == 1) | (NACCUDSD == 4 & NACCALZD == 1) ~ "AD",
TRUE ~ "Other")) %>%
dplyr::filter(ALZD_cat != "Other") %>%
dplyr::mutate(ALZD_cat = factor(ALZD_cat)) %>%
lm(formula = LogMol ~ NACCALZD + NACCAGE + NACCBMI + SEX)
summary(model)
# MINT
MINT_plot <- adrc_final %>%
dplyr::filter(LogMol > 7.1) %>%
dplyr::filter(MINTTOTS > 0 & MINTTOTS < 33) %>%
ggscatter(x = "MINTTOTS", y = "LogMol", add = "reg.line",
title = "MINTTOTS",
xlab = "Score", ylab = "Log(Peak Area)",
alpha = 0.2, color = "#006ba6") + stat_cor() +
theme(plot.title = element_text(size = 8), axis.title = element_text(size = 7),
axis.text = element_text(size = 6))
# CRAFTVRS, CRAFTURS, CRAFTDVR, CRAFTDRE, CRAFTDTI
CRAFTVRS_plot <- adrc_final %>%
dplyr::filter(LogMol > 0) %>%
dplyr::filter(CRAFTVRS > 0) %>%
dplyr::filter(CRAFTVRS < 45) %>%
ggscatter(x = "CRAFTVRS", y = "LogMol", add = "reg.line",
title = "Craft Story 21 Recall (Immediate), verbatim scoring",
xlab = "Score", ylab = "Log(Peak Area)",
alpha = 0.2, color = "#006ba6") + stat_cor() +
theme(plot.title = element_text(size = 8), axis.title = element_text(size = 7),
axis.text = element_text(size = 6))
CRAFTURS_plot <- adrc_final %>%
dplyr::filter(LogMol > 0) %>%
dplyr::filter(CRAFTURS > 0) %>%
dplyr::filter(CRAFTURS < 30) %>%
ggscatter(x = "CRAFTURS", y = "LogMol", add = "reg.line",
title = "Craft Story 21 Recall (Immediate), paraphrase scoring",
xlab = "Score", ylab = "Log(Peak Area)",
alpha = 0.2, color = "#006ba6") + stat_cor() +
theme(plot.title = element_text(size = 8), axis.title = element_text(size = 7),
axis.text = element_text(size = 6))
CRAFTDVR_plot <- adrc_final %>%
dplyr::filter(LogMol > 0) %>%
dplyr::filter(CRAFTDVR > 0) %>%
dplyr::filter(CRAFTDVR < 45) %>%
ggscatter(x = "CRAFTDVR", y = "LogMol", add = "reg.line",
xlab = "Score", ylab = "Log(Peak Area)", title = "memory",
alpha = 0.2, color = "#006ba6") + stat_cor() +
theme(plot.title = element_text(size = 8), axis.title = element_text(size = 7),
axis.text = element_text(size = 6))
CRAFTDRE_plot <- adrc_final %>%
dplyr::filter(LogMol > 0) %>%
dplyr::filter(CRAFTDRE > 0) %>%
dplyr::filter(CRAFTDRE < 30) %>%
ggscatter(x = "CRAFTDRE", y = "LogMol", add = "reg.line",
title = "Craft Story 21 Recall (Delayed), paraphrase scoring",
xlab = "Score", ylab = "Log(Peak Area)",
alpha = 0.2, color = "#006ba6") + stat_cor() +
theme(plot.title = element_text(size = 8), axis.title = element_text(size = 7),
axis.text = element_text(size = 6))
model <- adrc_final %>%
dplyr::filter(LogMol > 0) %>%
dplyr::filter(CRAFTVRS > 0 & CRAFTVRS < 45) %>%
lm(formula = LogMol ~ CRAFTVRS + NACCAGE + SEX + NACCBMI)
summary(model)
model <- adrc_final %>%
dplyr::filter(LogMol > 0) %>%
dplyr::filter(CRAFTDVR > 0 & CRAFTDVR < 45) %>%
lm(formula = LogMol ~ CRAFTDVR + NACCAGE + SEX + NACCBMI)
summary(model)
model <- adrc_final %>%
dplyr::filter(LogMol > 0) %>%
dplyr::filter(CRAFTURS > 0 & CRAFTURS < 30) %>%
lm(formula = LogMol ~ CRAFTURS + NACCAGE + SEX + NACCBMI)
summary(model)
model <- adrc_final %>%
dplyr::filter(LogMol > 0) %>%
dplyr::filter(CRAFTDRE > 0 & CRAFTDRE < 30) %>%
lm(formula = LogMol ~ CRAFTDRE + NACCAGE + SEX + NACCBMI)
summary(model)
model <- adrc_final %>%
dplyr::filter(LogMol > 0) %>%
dplyr::filter(CRAFTDVR > 0 & CRAFTDVR < 45) %>%
lm(formula = LogMol ~ CRAFTDVR + NACCAGE + SEX + NACCBMI)
summary(model)
setwd("~/OneDrive - University of California, San Diego Health/Projects/Caltech/Data/human_u19")
library(tidyverse)
library(mixOmics)
library(ggpubr)
library(vegan)
library(caret)
library(limma)
library(patchwork)
library(rstatix)
library(effsize)
library(readxl)
# Read data
t1000 <- read_csv("t1000_serum/mzmine/t1000_quant.csv")
adrc <- read_csv("adrc_plasma/mzmine/adrc_quant.csv")
winsconsin <- read_csv("wisconsin_serum/mzmine/wisconsin_quant.csv")
info_feature_t1000 <- t1000 %>% dplyr::select(1:3,7)
colnames(info_feature_t1000) <- c("Feature", "mz", "RT", "Corr_ID")
info_feature_t1000$Feature <- as.character(info_feature_t1000$Feature)
info_feature_adrc <- adrc %>% dplyr::select(1:3,7)
colnames(info_feature_adrc) <- c("Feature", "mz", "RT", "Corr_ID")
info_feature_adrc$Feature <- as.character(info_feature_adrc$Feature)
info_feature_win <- winsconsin %>% dplyr::select(1:3,7)
colnames(info_feature_win) <- c("Feature", "mz", "RT", "Corr_ID")
info_feature_win$Feature <- as.character(info_feature_win$Feature)
# My feature of interest has RT ~ 2.20 min in serum of Caltech
# t1000       3031
# adrc        7132
# win         2458
# Read metadata
t1000_meta <- read_csv("t1000_serum/metadata/DukeCollab_Metadata-5-20-2021_NO_PHI.csv")
t1000_key <- read_excel("t1000_serum/metadata/33965 LIBR Knight Barcode Key for LS 9.8.2022.xlsx")
t1000_abx <- read_csv("t1000_serum/metadata/t1000_meta_abx.csv")
t1000_meta_join <- t1000_key %>% left_join(t1000_meta, by = c("Patient ID" = "id"))
t1000_abx$SampleID <- as.character(t1000_abx$SampleID)
adrc_meta <- read_csv("adrc_plasma/metadata/ADRC_NACCSubsetUDS_ADI_NO_NATIVE_AMER_for_654_Plasma_2024-10-24.csv")
adrc_abx <- read_csv("adrc_plasma/metadata/adrc_meta_abx.csv")
adrc_meta$UCSD <- as.character(adrc_meta$UCSD)
adrc_abx$SampleID <- as.character(adrc_abx$SampleID)
win_meta <- read_csv("wisconsin_serum/metadata/13663_mars_csf_apoe_cognition_Jan2022 NO NATIVE AMER.csv")
win_csf_biomarkers <- read.delim("wisconsin_serum/metadata/wisconsin_metadata_with_csf_biomarkers_12.01.2023 NO NATIVE AMER.tsv")
win_csf_extra <- read_csv("wisconsin_serum/metadata/panda_mars_csf NO NATIVE AMER.csv")
win_key <- read_excel("wisconsin_serum/metadata/Pair Wisconsin fecal and serum samples_v4 NO NATIVE AMER.xlsx") %>%
dplyr::select(fecalMarsUniqueID, serumSpecimenBarCode, serumMARSID)
win_abx <- read_csv("wisconsin_serum/metadata/win_meta_abx.csv")
win_meta_join <- win_key %>% left_join(win_meta, by = c("fecalMarsUniqueID" = "uniqueid")) %>%
left_join(win_csf_biomarkers, by = c("fecalMarsUniqueID" = "unique_id"))
win_meta_join$serumSpecimenBarCode <- as.character(win_meta_join$serumSpecimenBarCode)
win_abx$SampleID <- as.character(win_abx$SampleID)
# Data tables
data_t1000 <- t1000 %>%
column_to_rownames("row ID") %>% dplyr::select(contains("Peak")) %>%
t() %>% as.data.frame() %>% rownames_to_column("SampleID") %>%
arrange(SampleID) %>% distinct(SampleID, .keep_all = TRUE)
data_t1000$SampleID <- gsub(".mzXML Peak area", "", data_t1000$SampleID)
data_adrc <- adrc %>%
column_to_rownames("row ID") %>% dplyr::select(contains("Peak")) %>%
t() %>% as.data.frame() %>% rownames_to_column("SampleID") %>%
arrange(SampleID) %>% distinct(SampleID, .keep_all = TRUE)
data_adrc$SampleID <- gsub(".mzML Peak area", "", data_adrc$SampleID)
data_win <- winsconsin %>%
column_to_rownames("row ID") %>% dplyr::select(contains("Peak")) %>%
t() %>% as.data.frame() %>% rownames_to_column("SampleID") %>%
arrange(SampleID) %>% distinct(SampleID, .keep_all = TRUE)
data_win$SampleID <- gsub(".mzML Peak area", "", data_win$SampleID)
# Check TIC
data_t1000_TIC <- data.frame(TIC = rowSums(data_t1000 %>% column_to_rownames("SampleID"))) %>%
rownames_to_column("SampleID") %>% arrange(TIC) %>%
dplyr::mutate(Type = case_when(str_detect(pattern = "Blank", SampleID) ~ "Blank",
str_detect(pattern = "QC", SampleID) ~ "QC",
TRUE ~ "Sample"))
data_adrc_TIC <- data.frame(TIC = rowSums(data_adrc %>% column_to_rownames("SampleID"))) %>%
rownames_to_column("SampleID") %>% arrange(TIC) %>%
dplyr::mutate(Type = case_when(str_detect(pattern = "pool", SampleID) ~ "QC_pool",
str_detect(pattern = "srm", SampleID) ~ "SRM",
str_detect(pattern = "ACN", SampleID) ~ "Blank",
str_detect(pattern = "mix", SampleID) ~ "QC_mix",
str_detect(pattern = "Sol", SampleID) ~ "Solvent",
TRUE ~ "Sample"))
data_win_TIC <- data.frame(TIC = rowSums(data_win %>% column_to_rownames("SampleID"))) %>%
rownames_to_column("SampleID") %>% arrange(TIC) %>%
dplyr::mutate(Type = case_when(str_detect(pattern = "Blank", SampleID) ~ "Blank",
str_detect(pattern = "QC", SampleID) ~ "QC",
TRUE ~ "Sample"))
data_t1000_TIC %>%
dplyr::mutate(Order = seq_len(n())) %>% # fake order cause it was not provided
ggscatter("Order", "TIC", add = "reg.line", color = "Type") +
stat_cor()
data_adrc_TIC %>%
dplyr::mutate(Order = seq_len(n())) %>% # fake order cause it was not provided
ggscatter("Order", "TIC", add = "reg.line", color = "Type") +
stat_cor()
data_win_TIC %>%
dplyr::mutate(Order = seq_len(n())) %>% # fake order cause it was not provided
ggscatter("Order", "TIC", add = "reg.line", color = "Type") +
stat_cor()
# Check sample type
sample_tic_t1000 <- data_t1000_TIC %>% dplyr::filter(Type == "Sample") %>% summarise(median(TIC))
blank_tic_t1000 <- data_t1000_TIC  %>% dplyr::filter(Type == "Blank") %>% summarise(median(TIC))
sample_tic_adrc <- data_adrc_TIC %>% dplyr::filter(Type == "Sample") %>% summarise(median(TIC))
blank_tic_adrc <- data_adrc_TIC  %>% dplyr::filter(Type == "Blank") %>% summarise(median(TIC))
sample_tic_win <- data_win_TIC %>% dplyr::filter(Type == "Sample") %>% summarise(median(TIC))
blank_tic_win <- data_win_TIC  %>% dplyr::filter(Type == "Blank") %>% summarise(median(TIC))
# Remove sample with low or high TIC
sample_t1000 <- data_t1000_TIC %>% dplyr::filter(Type == "Sample") %>%
dplyr::filter(TIC > blank_tic_t1000$`median(TIC)`)
# Calculate the interquartile range (IQR)
Q1 <- quantile(sample_t1000$TIC, 0.25)
Q3 <- quantile(sample_t1000$TIC, 0.75)
IQR <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR
upper_bound <- Q3 + 1.5 * IQR
# Filter the dataframe to remove outliers
sample_t1000_filter <- sample_t1000 %>%
dplyr::filter(TIC >= lower_bound & TIC <= upper_bound)
sample_adrc <- data_adrc_TIC %>% dplyr::filter(Type == "Sample") %>%
dplyr::filter(TIC > blank_tic_adrc$`median(TIC)`)
# Calculate the interquartile range (IQR)
Q1 <- quantile(sample_adrc$TIC, 0.25)
Q3 <- quantile(sample_adrc$TIC, 0.75)
IQR <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR
upper_bound <- Q3 + 1.5 * IQR
# Filter the dataframe to remove outliers
sample_adrc_filter <- sample_adrc %>%
dplyr::filter(TIC >= lower_bound & TIC <= upper_bound)
sample_win <- data_win_TIC %>% dplyr::filter(Type == "Sample") %>%
dplyr::filter(TIC > blank_tic_win$`median(TIC)`)
# Calculate the interquartile range (IQR)
Q1 <- quantile(sample_win$TIC, 0.25)
Q3 <- quantile(sample_win$TIC, 0.75)
IQR <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR
upper_bound <- Q3 + 1.5 * IQR
# Filter the dataframe to remove outliers
sample_win_filter <- sample_win %>%
dplyr::filter(TIC >= lower_bound & TIC <= upper_bound)
sample_t1000_filter %>%
dplyr::mutate(Order = seq_len(n())) %>% # fake order cause it was not provided
ggscatter("Order", "TIC", add = "reg.line", color = "Type") +
stat_cor()
sample_adrc_filter %>%
dplyr::mutate(Order = seq_len(n())) %>% # fake order cause it was not provided
ggscatter("Order", "TIC", add = "reg.line", color = "Type") +
stat_cor()
sample_win_filter %>%
dplyr::mutate(Order = seq_len(n())) %>% # fake order cause it was not provided
ggscatter("Order", "TIC", add = "reg.line", color = "Type") +
stat_cor()
# Filter data
data_t1000_filter <- data_t1000 %>% dplyr::filter(SampleID %in% sample_t1000_filter$SampleID)
data_adrc_filter <- data_adrc %>% dplyr::filter(SampleID %in% sample_adrc_filter$SampleID)
data_win_filter <- data_win %>% dplyr::filter(SampleID %in% sample_win_filter$SampleID)
# Extract raw peak
t1000_raw <- data_t1000_filter %>% dplyr::select(SampleID, `3031`)
colnames(t1000_raw)[2] <- "Molecule"
adrc_raw <- data_adrc_filter %>% dplyr::select(SampleID, `7132`)
colnames(adrc_raw)[2] <- "Molecule"
win_raw <- data_win_filter %>% dplyr::select(SampleID, `2458`)
colnames(win_raw)[2] <- "Molecule"
t1000_z <- t1000_raw %>%
dplyr::filter(Molecule > 0) %>%
dplyr::mutate(Molecule_z = (Molecule - mean(Molecule, na.rm = TRUE)) / sd(Molecule, na.rm = TRUE))
adrc_z <- adrc_raw %>%
dplyr::filter(Molecule > 0) %>%
dplyr::mutate(Molecule_z = (Molecule - mean(Molecule, na.rm = TRUE)) / sd(Molecule, na.rm = TRUE))
win_z <- win_raw %>%
dplyr::filter(Molecule > 0) %>%
dplyr::mutate(Molecule_z = (Molecule - mean(Molecule, na.rm = TRUE)) / sd(Molecule, na.rm = TRUE))
# Combine raw, relative, z-scores
t1000_mol <- t1000_raw %>%
left_join(data_t1000_TIC) %>% dplyr::select(-Type) %>%
dplyr::mutate(Molecule_RA = Molecule/TIC) %>%
dplyr::mutate(LogMol = log(Molecule + 1)) %>%
left_join(t1000_z %>% dplyr::select(-Molecule))
adrc_mol <- adrc_raw %>%
left_join(data_adrc_TIC) %>% dplyr::select(-Type) %>%
dplyr::mutate(Molecule_RA = Molecule/TIC) %>%
dplyr::mutate(LogMol = log(Molecule + 1)) %>%
left_join(adrc_z %>% dplyr::select(-Molecule))
win_mol <- win_raw %>%
left_join(data_win_TIC) %>% dplyr::select(-Type) %>%
dplyr::mutate(Molecule_RA = Molecule/TIC) %>%
dplyr::mutate(LogMol = log(Molecule + 1)) %>%
left_join(win_z %>% dplyr::select(-Molecule))
########
# MARS #
########
win_info <- win_mol %>% left_join(win_meta_join, by = c("SampleID" = "serumSpecimenBarCode")) %>%
dplyr::filter(!(is.na(mars_age))) %>%
dplyr::mutate(mars_age = gsub(">90", "90", mars_age)) %>%
dplyr::mutate_at("mars_age", as.numeric)
colnames(win_info) <- gsub("[- ]", "_", colnames(win_info))
# I have 292 samples with metadata
win_info %>% distinct(serumMARSID) %>% nrow() # 234 unique IDs
win_final <- win_info %>%
dplyr::filter(diagnosis %in% c("Normal", "MCI-AD", "Dementia-AD")) %>% group_by(serumMARSID) %>%
dplyr::mutate(diagnosis = factor(levels = c("Normal", "MCI-AD", "Dementia-AD"), diagnosis)) %>%
dplyr::mutate_at("diagnosis", as.numeric) %>%
dplyr::filter(diagnosis == max(diagnosis)) %>%
dplyr::filter(mars_age == max(mars_age)) %>%
ungroup()
win_final %>% distinct(reggieid.x) %>% nrow()
View(win_final)
########
# MARS #
########
win_info <- win_mol %>% left_join(win_meta_join, by = c("SampleID" = "serumSpecimenBarCode")) %>%
dplyr::filter(!(is.na(mars_age))) %>%
dplyr::mutate(mars_age = gsub(">90", "90", mars_age)) %>%
dplyr::mutate_at("mars_age", as.numeric)
colnames(win_info) <- gsub("[- ]", "_", colnames(win_info))
# I have 292 samples with metadata
win_info %>% distinct(serumMARSID) %>% nrow() # 234 unique IDs
win_final <- win_info %>%
dplyr::filter(diagnosis %in% c("Normal", "MCI-AD", "Dementia-AD")) %>% group_by(serumMARSID) %>%
dplyr::mutate(diagnosis = factor(levels = c("Normal", "MCI-AD", "Dementia-AD"), diagnosis)) %>%
dplyr::mutate_at("diagnosis", as.numeric) %>%
dplyr::filter(diagnosis == max(diagnosis)) %>%
dplyr::filter(mars_age == max(mars_age)) %>%
ungroup()
win_final %>% distinct(reggieid.x) %>% nrow()
# Sex
win_final %>%
dplyr::filter(LogMol > 0) %>%
dplyr::filter(!(is.na(sex))) %>%
ggboxplot(x = "sex", y = "LogMol", add = "jitter") + stat_compare_means() # no effect
# Race
win_final %>%
dplyr::filter(LogMol > 0) %>%
ggboxplot(x = "race", y = "LogMol", add = "jitter") + stat_compare_means() # no samples
# BMI
win_final %>%
dplyr::filter(LogMol > 0) %>%
ggscatter(x = "bmi", y = "LogMol", add = "reg.line") + stat_cor() # small effect
# Age
win_age_plot <- win_final %>%
dplyr::filter(LogMol > 0) %>%
ggscatter(x = "mars_age", y = "LogMol", add = "reg.line", alpha = 0.2,
xlab = "Age (years)", ylab = "Log(Peak Area)", color = "#ff6663",
title = "MARS - 231 Individuals") + stat_cor() +
theme(plot.title = element_text(size = 8), axis.title = element_text(size = 7),
axis.text = element_text(size = 6))
model <- win_final %>%
dplyr::filter(LogMol > 0) %>%
dplyr::filter(!(is.na(sex))) %>%
lm(formula = LogMol ~ mars_age + sex + bmi)
summary(model)
# ApoE
win_final %>%
dplyr::filter(LogMol > 0) %>%
dplyr::filter(apoe %in% c("E3_E3", "E3_E4", "E4_E4", "E2_E3")) %>%
ggboxplot(x = "apoe", y = "LogMol", add = "jitter") + stat_compare_means() # no effect
# ApoE4
win_final %>%
dplyr::filter(LogMol > 0) %>%
dplyr::filter(!(is.na(apoe4))) %>%
ggboxplot(x = "apoe4", y = "LogMol", add = "jitter") + stat_compare_means() # no effect
# ApoE
win_final %>%
dplyr::filter(LogMol > 0) %>%
dplyr::filter(apoe %in% c("E3_E3", "E3_E4", "E4_E4", "E2_E3")) %>%
ggboxplot(x = "apoe", y = "LogMol", add = "jitter") + stat_compare_means() # no effect
# ApoE4
win_final %>%
dplyr::filter(LogMol > 0) %>%
dplyr::filter(!(is.na(apoe4))) %>%
ggboxplot(x = "apoe4", y = "LogMol", add = "jitter") + stat_compare_means() # no effect
# Diagnosis
win_final %>%
dplyr::filter(LogMol > 0) %>%
ggboxplot(x = "diagnosis", y = "LogMol", add = "jitter") + stat_compare_means() # tendency
win_final %>%
dplyr::filter(LogMol > 0) %>%
dplyr::mutate(diagnosis_lump = case_when(diagnosis == 1 ~ "Normal",
TRUE ~ "Impaired")) %>%
ggboxplot(x = "diagnosis_lump", y = "LogMol", add = "jitter") + stat_compare_means() # tendency
model <- win_final %>%
dplyr::filter(LogMol > 0) %>%
dplyr::filter(diagnosis != 2) %>%
lm(formula = LogMol ~ diagnosis + mars_age + bmi + sex)
summary(model)
model <- win_final %>%
dplyr::filter(LogMol > 0) %>%
dplyr::mutate(diagnosis_lump = case_when(diagnosis == 1 ~ "Normal",
TRUE ~ "Impaired")) %>%
lm(formula = LogMol ~ diagnosis_lump + mars_age + bmi + sex)
summary(model)
# REY
win_final %>%
dplyr::filter(LogMol > 0) %>%
dplyr::rename(REY = `Rey_Auditory_Verbal_Learning_Test_(RAVLT)___Long_Delay_Free_Recall_(Trial_7)_Raw`) %>%
dplyr::filter(REY > 0) %>%
ggscatter(x = "REY", y = "LogMol", add = "reg.line") + stat_cor()
win_final %>%
dplyr::filter(LogMol > 0) %>%
dplyr::mutate(diagnosis_lump = case_when(diagnosis == 1 ~ "Normal",
TRUE ~ "Impaired")) %>%
ggboxplot(x = "diagnosis_lump", y = "LogMol", add = "jitter") + stat_compare_means() # tendency
model <- win_final %>%
dplyr::filter(LogMol > 0) %>%
dplyr::filter(diagnosis != 2) %>%
lm(formula = LogMol ~ diagnosis + mars_age + bmi + sex)
summary(model)
model <- win_final %>%
dplyr::filter(LogMol > 0) %>%
dplyr::mutate(diagnosis_lump = case_when(diagnosis == 1 ~ "Normal",
TRUE ~ "Impaired")) %>%
lm(formula = LogMol ~ diagnosis_lump + mars_age + bmi + sex)
model <- win_final %>%
dplyr::filter(LogMol > 0) %>%
dplyr::filter(diagnosis != 2) %>%
lm(formula = LogMol ~ diagnosis + mars_age + bmi + sex + apoe4)
summary(model)
model <- win_final %>%
dplyr::filter(LogMol > 0) %>%
dplyr::filter(diagnosis != 2) %>%
lm(formula = LogMol ~ diagnosis + mars_age + bmi + sex)
summary(model)
win_final %>%
dplyr::filter(LogMol > 0) %>%
dplyr::rename(REY = `Rey_Auditory_Verbal_Learning_Test_(RAVLT)___Trial_Trials_1_5_Raw`) %>%
dplyr::filter(REY > 0) %>%
ggscatter(x = "REY", y = "LogMol", add = "reg.line") + stat_cor()
win_final <- win_final %>%
rename(ravlt_t1_5_raw = `Rey_Auditory_Verbal_Learning_Test_(RAVLT)___Trial_Trials_1_5_Raw`)
age_edu_model <- lm(ravlt_t1_5_raw ~ age + education,
data = win_final,
na.action = na.exclude)
age_edu_model <- lm(ravlt_t1_5_raw ~ mars_age + education,
data = win_final,
na.action = na.exclude)
summary(age_edu_model)
win_final$ravlt_t1_5_adjusted <- residuals(age_edu_model)
win_final %>%
dplyr::filter(LogMol > 0) %>%
dplyr::rename(REY = ravlt_t1_5_adjusted) %>%
dplyr::filter(REY > 0) %>%
ggscatter(x = "REY", y = "LogMol", add = "reg.line") + stat_cor()
model <-
dplyr::filter(LogMol > 0) %>%
dplyr::rename(REY = ravlt_t1_5_adjusted) %>%
dplyr::filter(REY > 0) %>%
lm(formula = LogMol ~ REY + mars_age + bmi + sex)
model <-
dplyr::filter(LogMol > 0) %>%
dplyr::rename(REY = ravlt_t1_5_adjusted) %>%
dplyr::filter(REY > 0) %>%
lm(formula = LogMol ~ REY + mars_age + bmi + sex)
model <- win_final
model <- win_final %>%
dplyr::filter(LogMol > 0) %>%
dplyr::rename(REY = ravlt_t1_5_adjusted) %>%
dplyr::filter(REY > 0) %>%
lm(formula = LogMol ~ REY + mars_age + bmi + sex)
summary(model)
win_final <- win_final %>%
rename(ravlt_t1_5_raw2 = `Rey_Auditory_Verbal_Learning_Test_(RAVLT)___Long_Delay_Free_Recall_(Trial_7)_Raw`)
age_edu_model <- lm(ravlt_t1_5_raw2 ~ mars_age + education,
data = win_final,
na.action = na.exclude)
summary(age_edu_model)
win_final$ravlt_t1_5_adjusted2 <- residuals(age_edu_model)
win_final %>%
dplyr::filter(LogMol > 0) %>%
dplyr::rename(REY = ravlt_t1_5_adjusted2) %>%
dplyr::filter(REY > 0) %>%
ggscatter(x = "REY", y = "LogMol", add = "reg.line") + stat_cor()
model <- win_final %>%
dplyr::filter(LogMol > 0) %>%
dplyr::rename(REY = ravlt_t1_5_adjusted2) %>%
dplyr::filter(REY > 0) %>%
lm(formula = LogMol ~ REY + mars_age + bmi + sex)
summary(model)
win_final %>%
dplyr::filter(LogMol > 0) %>%
dplyr::mutate(diagnosis_lump = case_when(diagnosis == 1 ~ "Normal",
TRUE ~ "Impaired")) %>%
ggboxplot(x = "diagnosis_lump", y = "ravlt_t1_5_adjusted2", add = "jitter") + stat_compare_means() # tendency
win_final %>%
dplyr::filter(LogMol > 0) %>%
dplyr::mutate(diagnosis_lump = case_when(diagnosis == 1 ~ "Normal",
TRUE ~ "Impaired")) %>%
ggboxplot(x = "diagnosis_lump", y = "ravlt_t1_5_adjusted", add = "jitter") + stat_compare_means() # tendency
win_final %>%
dplyr::filter(LogMol > 0) %>%
dplyr::mutate(diagnosis_lump = case_when(diagnosis == 1 ~ "Normal",
TRUE ~ "Impaired")) %>%
ggboxplot(x = "diagnosis_lump", y = "ravlt_t1_5_adjusted2", add = "jitter") + stat_compare_means() # tendency
win_final %>%
dplyr::filter(LogMol > 0) %>%
dplyr::filter(REY > 0) %>%
ggscatter(x = "apoe_risk_beta", y = "LogMol", add = "reg.line") + stat_cor()
win_final %>%
dplyr::filter(LogMol > 0) %>%
ggscatter(x = "apoe_risk_beta", y = "LogMol", add = "reg.line") + stat_cor()
win_final %>%
dplyr::filter(LogMol > 0) %>%
ggscatter(x = "apoe_risk_score_beta", y = "LogMol", add = "reg.line") + stat_cor()
